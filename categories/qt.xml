<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>شاهینیسم (Qt)</title><link>http://shahinism.github.io</link><description>بعضی وقت‌ها باید قبل از این که بتوانید راه بروید‌، بدوید‌!</description><lastBuildDate>Mon, 13 May 2013 15:06:58 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>راهنمای کوتاه کار با DBus در پایتون (نوشتن روبات پاسخگو برای Pidgin)</title><link>http://shahinism.github.io/posts/blog13910705rhnmy-khwth-khr-b-dbus-dr-pytwn-nwshtn-r.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;مساله این‌جاست که وقتی پای کامپیوتر می‌نشینم‌، حتی اگر کاری نداشته باشم‌، یادم نمی‌ماند که مسنجرم را روشن کنم‌. و خوب از طرفی دوست دارم که در صورت امکان‌، با رفقای اینترنتی و غیر اینترنتی‌ام در ارتباط باشم‌. خوب حل این مشکل ساده است‌. کافی است میز‌کارت را تنظیم کنی که با روشن شدنش‌، Pidgin را هم اجرا کند‌. ولی خوب این بالقوه مشکل دیگری را می‌آفریند. کدام مشکل؟ همین که گاها موقع کار کردن‌، یکی از دوستانت می‌پرد وسط و چیزی می‌گوید که کوچکترین پیامدش حواس پرتی است و این اصلا نمی‌تواند کمک خوبی برای بالا بردن بهره‌وری شود.
راه حل کوتاه در این زمینه استفاده از Status‌های مسنجر است‌. جدای از این که Status‌ها در همهٔ مسنجر‌ها همانطور که باید نشان داده نمی‌شوند‌، چه تضمینی وجود دارد که من حواس‌پرت و البته تنبل (gsh سابق D:)، یادم بماند و حالش را داشته باشم که در هر وضعیتی Status مناسب را انتخاب کنم‌؟&lt;/p&gt;
&lt;p&gt;بعد از کمی جستجو‌، با &lt;a title="dbus official webpage" href="http://dbus.freedesktop.org/" target="_blank"&gt;DBus&lt;/a&gt; آشنا شدم و البته یادم آمد که خیلی وقت پیش‌،&lt;a title="jadi dbus" href="http://jadi.net/2011/07/linux-chera-command-line/" target="_blank"&gt; جادی عزیز‌&lt;/a&gt;، کاری تقریبا در همین مایه‌ها با DBus و Pidgin انجام داده بود‌. توضیحات تکمیلی در مورد DBus را می‌توانید در وبلاگ جادی بخوانید‌، خصوصا این که اسکریپت نوشته شده توسط جادی در آن پست‌، پیش در آمد خوبی برای این کار است‌، و حقیقتش تنها منبع به درد بخورم در این زمینه بود‌! (منظورم در زمینهٔ عملی کار با DBus است‌، در زمینهٔ تئوری و به عنوان یک راهنما می‌توان به &lt;a title="dbus-python turorila" href="http://dbus.freedesktop.org/doc/dbus-python/doc/tutorial.html" target="_blank"&gt;راهنمای&lt;/a&gt; Freedesktop بسنده کرد‌.)&lt;/p&gt;
&lt;p&gt;مساله این‌جاست که می‌خواهیم اسکریپتی بنویسیم که پس از اجرا‌، منتظر Pidgin بماند‌. اگر Pidgin پیغامی دریافت کرد‌، اسکریپت به صورت خود‌کار و بلافاصله‌، جوابی را که از قبل بهش خورانده‌ایم رو به مخاطب آن‌ور خط بدهد‌.&lt;/p&gt;
&lt;p&gt;با این وصف‌، اسکریپت‌مان دو مرحله خواهد داشت‌.&lt;/p&gt;
&lt;p&gt;اول‌، منتظر ماندن برای یک علامت که از طرف Pidgin‌، پس از دریافت پیام ارسال می‌شود‌.&lt;/p&gt;
&lt;p&gt;دوم‌، ارسال جواب برای مخاطبی که پیغام را ارسال کرده‌.&lt;/p&gt;
&lt;p&gt;برای انجام این کار اول از همه‌، ابزار‌های مورد نیازمان را وارد می‌کنیم‌:&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;import sys&lt;/p&gt;
&lt;p&gt;import dbus&lt;/p&gt;
&lt;p&gt;from PyQt4.QtGui import QApplication&lt;/p&gt;
&lt;p&gt;from dbus.mainloop.qt import DBusQtMainLoop&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;قرار بر این بود که اسکریپت پس از اجرا منتظر بماند‌، درست؟ خوب همان‌طور که می‌دانید برنامه‌ها منطقا جوری نوشته می‌شوند که یک کاری را شروع کنند‌، انجام دهند‌، و پایان یابند‌. این روند زیاد برای کار ما مناسب نیست‌. از طرفی استفاده از حلقه‌های بی‌نهایت مرسوم‌‌، جز پیچیده کردن کار‌، نتیجه‌ای به همراه ندارد‌. این است که برای سازگاری بیشتر اسکریپت با برنامه‌های Qt (در ادامه دلیلش را می‌گویم) از QApplication و DBusQtMainLoop برای مدیریت حلقهٔ اصلی استفاده می‌کنیم‌. در ادامه اضافه می‌کنیم:&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;bus_loop = DBusQtMainLoop(set_as_default=True)&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;کار با حلقهٔ اصلی هنوز تمام نشده‌، باقی کار را آخر انجام می‌دهیم‌. و اما حالا نوبت به انجام مرحلهٔ اول کارمان می‌رسد. تابع گیرندهٔ سیگنال (همان علامتی که Pidgin پس از دریافت پیغام ارسال می‌کند) را می‌نویسیم‌.&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;def connect_dbus(text):&lt;/p&gt;
&lt;p&gt;global answer&lt;/p&gt;
&lt;p&gt;answer = text&lt;/p&gt;
&lt;p&gt;bus = dbus.SessionBus()&lt;/p&gt;
&lt;p&gt;bus.add_signal_receiver(pidgin_control_func,&lt;/p&gt;
&lt;p&gt;dbus_interface="im.pidgin.purple.PurpleInterface",&lt;/p&gt;
&lt;p&gt;signal_name="ReceivedImMsg")&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;اولین سوال در این تابع‌، این است که به کدام DBus وصل شویم؟ به طور معمول دو DBus داریم‌، SystemBus که به صورت سراسری (System wide) است‌‌. و دومی SessionBus که محدود به یوزر اجرا کنندهٔ برنامه می‌شود‌. برای کار ما‌، دومی‌، انتخاب معقول‌تری است‌. پس از اتصال‌، نوبت به نصب یک پیغام‌گیر می‌شود‌. تابع مورد استفاده به صورت bus.add_signal_receiver است که سه آرگومان می‌گیرد‌. که هر کدام به سوالی پاسخ می‌دهند‌:&lt;/p&gt;
&lt;p&gt;۱- پس از دریافت سیگنال کدام تابع را صدا کنم؟ پاسخ: pidgin_control_func (تابعی که در مرحلهٔ دوم خواهیم ساخت)&lt;/p&gt;
&lt;p&gt;۲- روی DBus به حرف کدام برنامه گوش کنم؟ پاسخ: Pidign که خوب ما از آدرس DBusاش برای معرفی استفاده می‌کنیم‌.&lt;/p&gt;
&lt;p&gt;۳- منتظر چه نوع علامتی باشم؟ پاسخ: ReceivedImMsg که با کمی جستجو در مستندات Pidgin به عنوان علامت دریافت پیغام توسط Pidgin شناسایی کردیم ;-)&lt;/p&gt;
&lt;p&gt;در این تابع ما از فراخوان می‌خواهیم که آرگومانی را به عنوان text برایمان ارسال کند و آن را به متغیر سراسری answer نسبت می‌دهیم‌. دلیل این کار ساده است‌. چون می‌خواهیم کلا در برنامهٔ اصلی فقط همین تابع را صدا کنیم و خودش باقی کار‌ها را انجام دهد.&lt;/p&gt;
&lt;p&gt;نوبت به نوشتن تابع دوم می‌رسد‌:&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;def pidgin_control_func(account, sender, message, conversation, flags):&lt;/p&gt;
&lt;p&gt;bus = dbus.SessionBus()&lt;/p&gt;
&lt;p&gt;obj = bus.get_object("im.pidgin.purple.PurpleService", "/im/pidgin/purple/PurpleObject")&lt;/p&gt;
&lt;p&gt;purple = dbus.Interface(obj, "im.pidgin.purple.PurpleInterface")&lt;/p&gt;
&lt;p&gt;if purple.PurpleAccountGetUsername(account) != sender:&lt;/p&gt;
&lt;p&gt;purple.PurpleConvImSend(purple.PurpleConvIm(conversation), answer)&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;خوب اول از همه این که ما در نوشتن این تابع ۶ آرگومان می‌گیریم‌. و البته این شش آرگومان چیز‌هایی هستند که همان سیگنال ReceivedImMsg برای‌مان می‌فرستد‌. که البته اطلاعات خیلی به درد بخوری‌اند‌. طبق روال قبلی به SessionBus وصل می‌شویم (این کار را می‌شد یک بار انجام داد‌، ولی موقع استفاده به صورت ماژول کمی جفتک می‌انداخت). در ادامه به سه سوال دیگر جواب می‌دهیم:&lt;/p&gt;
&lt;p&gt;۱- روی DBus به کدام برنامه گوش کنم؟ پاسخ im.pigin.purple.PurpleService&lt;/p&gt;
&lt;p&gt;۲- آدرسش کجاست؟ پاسخ: ‎/im/pidgin/purple/PurpleObject&lt;/p&gt;
&lt;p&gt;در واقع با پاسخ به این دو سوال‌، سعی به ساخت یک شیع ارتباطی با برنامهٔ مورد نظر داریم‌. حال با این شیع می‌توانیم یک رابط برای مکاتبهٔ تابع‌مان با Pidgin بسازیم‌.&lt;/p&gt;
&lt;p&gt;۳- کدام رابط از آبجکت ساخته شده؟ پاسخ: im.pidgin.purple.PurpleInterface&lt;/p&gt;
&lt;p&gt;و خوب حالا تنها برای ارسال پیام کافی است تابع PurpleConvImSend را از شیع ساخته شده صدا کنیم‌ و به دو سوال پاسخ دهیم:&lt;/p&gt;
&lt;p&gt;۱- به چه کسی پیغام بفرستم؟ پاسخ: کسی که برای‌مان پیغام فرستاده‌. برای به دست آوردنش کافی است که از تابع PurpleConvIm از شیع‌مان بخواهم که آدرسش را پیدا کند ;-)&lt;/p&gt;
&lt;p&gt;۲- چه بگویم؟ پاسخ answer‌‌، همان متغیر سراسری که که در تابع اول‌، مقدار دهی‌اش کردیم‌.&lt;/p&gt;
&lt;p&gt;البته من در تابع یک قفل کودک هم گذاشته‌ام‌. چطور؟ ماجرا این‌جاست که با نوشتن هم‌چین تابعی‌، وقتی وسوسه می‌شوید که خود‌تان امتحانش کنید‌، به یک لوپ بی‌نهایت تبدیلش می‌کنید! کافیسیت برای دیدن این لوپ شرط if موجود در تابع را پاک کرده و تابع را امتحان کنید‌. یک بار به خود‌تان پیغام بدهید‌، Pidgin علامت می‌دهد‌، روبات پاسخ می‌دهد و دوباره پس از دریافت پیغام روبات روی Pidgin‌، این برنامه دوباره سیگنال ارسال می‌کند و این کار اگر ولش کنید تا عبد ادامه خواهد داشت ;-)&lt;/p&gt;
&lt;p&gt;دیگر وقت اجرای تابع اصلی رسیده‌، و کافیست که:&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;app = QApplication([])&lt;/p&gt;
&lt;p&gt;connect_dbus(message)&lt;/p&gt;
&lt;p&gt;app.exec_()&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;برنامه الان به راحتی اجرا می‌شود و کاری را هم که می‌خواهیم دقیقا انجام می‌دهد(البته طبیعی است که چیز‌های ساده‌ای باید به آن اضافه کنید‌.)‌. ولی هنوز یک مشکل دارد‌، آن هم این که نمی‌توان آن را بست‌! حتی Ctrl+c هم در ترمینال آن را نمی‌کشد‌. این است که از دو خط زیر و دقیقا قبل از ساختن شیع app کمک می‌گیریم:&lt;/p&gt;
&lt;p&gt;[python]&lt;/p&gt;
&lt;p&gt;import signal&lt;/p&gt;
&lt;p&gt;signal.signal(signal.SIGINT, signal.SIG_DFL)&lt;/p&gt;
&lt;p&gt;[/python]&lt;/p&gt;
&lt;p&gt;کار این تابع این است که وقتی SIGINT یا همان Ctrl+c ما را گرفت (توجه کنید که این کلید در رابط گرافیکی Qt برای کپی متن استفاده می‌شود) آن را به SIG_DFL ترجمه کند‌! یعنی بزند بترکاند برنامه‌مان را ;-)&lt;/p&gt;
&lt;p&gt;می‌توانید نسخهٔ کامل اسکریپت را از&lt;a title="Download answering machine" href="https://github.com/shahinism/PyPomo/raw/master/src/answering_machine.py" target="_blank"&gt; این لینک &lt;/a&gt;دانلود کنید و به صورت زیر اجرایش کنید:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python answering_machine.py ANSWER_MESSAGE
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;اما خوب درست است که این اسکریپت تقریبا مشکل‌مان را حل می‌کند‌، اما هنوز یک جای کارش می‌لنگد‌! باز هم من کم حواس باید یادم باشد که اجرایش کنم‌! و از آن بد‌تر در وقت آزادم خاموشش کنم‌! و این اصلا حال نمی‌دهد‌. این است که آن را با &lt;a title="PyPomo Official webpage" href="http://shahinism.github.com/PyPomo/" target="_blank"&gt;PyPomo&lt;/a&gt; قاطی می‌کنم‌ (آخرین نسخهٔ روی گیت). جوری که وقتی در حال انجام یک پامودور هستم‌، این اسکریپت را روشن کند‌، و وقتی که موقع استراحت است یا interrupt داده‌ام‌، آن را خاموش کند‌. حالا دیگر تقریبا همه چیز حل شده است ;-)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;پی‌نوشت۱: &lt;/strong&gt;متاسفانه هر کاری کردم نتوانستم این دندانه گذاری کد‌ها را درست کنم‌. مشکل از پلاگین وردپرس‌ام است‌، یا همچین چیزی‌، باید به فکر جایگزینی برایش باشم‌!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;پی‌نوشت۲:&lt;/strong&gt; می‌دانم برنامه به بهترین شکل ممکن نوشته نشده‌، زیاده کاری دارد و حتی در ترکیبش با PyPomo باگ‌هایی هست که به چشمم نیامده‌، ولی خوب حداقل تلاشم را کرده‌ام دیگر‌. اگر برنامه نظرتان را جلب کرده‌، و راه بهتری بلدید‌، روی گیت فورکش کنید و تغییرات‌تان را اعمال کنید‌. مطمئنم چیز‌های بهتری می‌توان ازش ساخت‌!&lt;/p&gt;</description><category>dbus</category><category>PyPomo</category><category>Python</category><category>qdbus</category><category>Qt</category><category>برنامه نویسی</category><category>حل مشکل</category><category>نرم افزار</category><category>پایتون</category><category>کدباز</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910705rhnmy-khwth-khr-b-dbus-dr-pytwn-nwshtn-r.html</guid><pubDate>Wed, 26 Sep 2012 12:38:12 GMT</pubDate></item><item><title>چطور نمای oxygen را برای GTK و Qt در هر مدیر‌پنجره‌ای داشته باشیم‌؟</title><link>http://shahinism.github.io/posts/blog13910620chtwr-nmy-oxygen-r-bry-gtk-w-qt-dr-hr-mdyrpnjrh.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;تا زمانی که روی KDE بودم زیاد به قیافهٔ پنجره‌های GTKایم (مثل فایرفاکس یا Pidgin) اهمیت نمی‌دادم‌. خود میزکار آن‌قدر چشم نواز بود که این‌ها اصلا به چشم نمی‌آمد (البته می‌دانم مشکل با Gtk-qt-engine حل می‌شد‌، ولی باگ‌هایش در نرم‌افزاری مثل Libreoffice درد آور بود!) وقتی هم که کلا میزکارم را به &lt;a title="نصب Awesome WM روی اسلکور" href="http://shahinism.com/blog/1391/01/06/%d9%86%d8%b5%d8%a8-awesome-wm-%d8%b1%d9%88%db%8c-%d8%a7%d8%b3%d9%84%da%a9%d9%88%d8%b1/" target="_blank"&gt;Awesome&lt;/a&gt; یا این اواخر &lt;a title="تجربهٔ کار با i3 یک رقیب قدر‌!" href="http://shahinism.com/blog/1391/04/15/%d8%aa%d8%ac%d8%b1%d8%a8%d9%87%d9%94-%da%a9%d8%a7%d8%b1-%d8%a8%d8%a7-i3-%db%8c%da%a9-%d8%b1%d8%ba%db%8c%d8%a8-%d9%82%d8%af%d8%b1%e2%80%8c/" target="_blank"&gt;i3&lt;/a&gt; تغییر دادم‌، آن‌قدر‌ها در گیر و دار پوستهٔ GTK نبودم‌. چون چشمم به قدر کافی به آن‌ها عادت کرده بود‌.
چشم پوشی از حل این مساله هم‌چنان ادامه داشت تا این که بعد از آپگرید به نسخهٔ کارنت اسلکور (که اگر امتحانش نکنید‌، چیز‌های خیلی خیلی خوبی را از دست داده‌اید‌) نکته کمی عجیب‌تر شد‌! تمامی پنجره‌ها (اعم از GTK و Qt) در KDE با نمای Qt نمایش داده می‌شدند (آره هنوز KDE نصب می‌کنم‌، چون کس دیگه هم از کامپیوترم استفاده می‌کنه ;-)) ولی در i3 حتی پنجره‌های Qt هم به مزخرفی قبل بودند‌. دیگر وقت آن شد که مساله را حل کنیم‌!&lt;/p&gt;
&lt;p&gt;&lt;a title="Uniform_Look_for_Qt_and_GTK_Applications" href="https://wiki.archlinux.org/index.php/Uniform_Look_for_Qt_and_GTK_Applications#Styles_for_both_Qt_and_GTK.2B" target="_blank"&gt;این مدخل&lt;/a&gt; ویکی آرچ‌، منبع خیلی کاملی برای این مساله است‌! اما خلاصه‌اش را به همراه چند نکتهٔ ظریف می‌توانید در ادامه بخوانید‌:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h5&gt;Oxygen برای GTK:&lt;/h5&gt;
&lt;p&gt;از آن‌جایی که&lt;a title="gtk2 styles" href="https://wiki.archlinux.org/index.php/Uniform_Look_for_Qt_and_GTK_Applications#GTK2_styles" target="_blank"&gt; ابزار‌های زیادی &lt;/a&gt;برای این کار وجود دارد‌ (حتی می‌توان این کار را&lt;a title="manual gtk2 style" href="https://wiki.archlinux.org/index.php/GTK%2B#GTK.2B_2.x" target="_blank"&gt; به صورت دستی&lt;/a&gt; انجام داد) کافیست یکی از آن‌ها را نصب و اجرا کرده و تم oxygen را انتخاب کنید ;-) مثلا در اسلکور من از &lt;a title="gtk-chtheme official page" href="http://plasmasturm.org/code/gtk-chtheme/" target="_blank"&gt;gtk-chtheme&lt;/a&gt; استفاده کردم که اسلکبیلدش هم موجوده D:&lt;/p&gt;
&lt;h5&gt;oxygen در Qt:&lt;/h5&gt;

&lt;p&gt;حقیقتش خیلی وقت بود که بعضی چیز‌ها در نمای Qt اذیتم می‌کرد‌. مثلا فونت ریز این بالون‌هایی که در Systemtry برای اخطار ظاهر می‌شوند (برای دیدن ترجمهٔ لغاتم در mdic زیاد با آن‌ها روبرو می‌شوم) با این چشم ضعیف و رزولوشن کم مانیتور‌، جدا خسته کننده می‌شد‌! این بود که دیروز خیلی اتفاقی دستور زیر را پیدا کردم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;qtconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(و اصلا همین دستور زمینهٔ حل کل مشکلات مطرح شده در این پست را فراهم کرد!) خوب محتویات دستور که تماما مهیاست‌. اما احتمال دارد مثل من‌، Oxygen جزء تم‌های qtconfig‌تان نباشد‌. و دقیقا این همان دلیلی است که جدیدا در اسلکور نمای Qt ناجور شده بود‌. برای حل این مشکل کافیست آدرس پوشهٔ Plugin بستهٔ KDE را به متغیر QT_PLUGIN_PATH (سراسری) نسبت دهیم‌! یعنی در نسخهٔ ۶۴ بیتی اسلکور باید همچین خطی را به فایل ‎/etc/profile اضافه کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;QT_PLUGIN_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib64/kde4/plugins/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;احتمالا بعد از یک لاگوت/لاگین‌، این مشکل هم حل شده ;-)&lt;/p&gt;</description><category>GTK</category><category>gtk-chtheme</category><category>i3</category><category>KDE</category><category>Qt</category><category>qt-config</category><category>اسلکور</category><category>حل مشکل</category><category>چی‌؟ چرا‌؟ چگونه‌؟</category><guid>http://shahinism.github.io/posts/blog13910620chtwr-nmy-oxygen-r-bry-gtk-w-qt-dr-hr-mdyrpnjrh.html</guid><pubDate>Mon, 10 Sep 2012 08:04:36 GMT</pubDate></item><item><title>یوتیوب‌؟ یا دانشگاه‌؟ پرده اول</title><link>http://shahinism.github.io/posts/blog13900420ywtywb-y-dnshgh-prdh-wl.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;یه استادی داریم‌، که یه روز یه حرف خوبی زد (‌فکر کنم‌، اولین و آخرین بارش بود‌). گفتش که: اینترنت خیلی بزرگه و خیلی چیز‌ها می‌شه ازش یاد گرفت‌، ولی مهم‌ترین نکته‌اش اینجاست که خیلی راحت‌تر می‌شه توش وقت تلف کرد. منم که بچه حرف گوش کن‌، این حرفش رو هیچ‌وقت یادم نرفت‌!&lt;/p&gt;
&lt;p&gt;حالا من می‌گم تو دانشگاه‌ها (‌حد‌اقل تو ایرانش‌) هم بیشتر از اون چیزی که یاد می‌گیری وقت تلف می‌کنی‌؟ پس چی کار کنیم‌؟ آره درسته‌، باس خودمون آستینا رو بالا بزنیم‌. رو همین حساب از این به بعد توی پست‌هایی با این عنوان منابع آموزشی خوبی که روی Youtube پیدا می‌کنم معرفی می‌کنم تا شما هم استفاده ببرین‌. این‌جوری حداقل تونستم دین خودم رو به تولید‌کننده‌های این آموزش‌ها ادا کنم‌.&lt;a href="http://shahinism.com/wp-content/uploads/bryan.jpg" rel="prettyPhoto"&gt;&lt;img class="alignleft size-medium wp-image-400" title="bryan" src="http://shahinism.com/wp-content/uploads/bryan-219x300.jpg" alt="" width="219" height="300"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;تو این قسمت قصد معرفی کانال &lt;a title="VoidRealms on Youtube" href="http://www.youtube.com/user/VoidRealms#p/a" target="_blank"&gt;VoidRealm's&lt;/a&gt; رو دارم. توی این کانال که مدیریتش رو &lt;a title="voidrealms official website" href="http://www.voidrealms.com/" target="_blank"&gt;آقای برایان&lt;/a&gt; بر عهده دارن‌، آموزش‌های برنامه نویسی در محیط‌هایی نظیر Visual Studio و Qt و زبان‌های مختلف نظیر C++، Java، C# ارائه می‌شه که با توجه به تصویری بودن آموزش‌ها و توضیحات خوب جناب برایان‌، به منابع خیلی به درد بخوری برای یاد‌گیری این زبان‌ها تبدیل شده‌.&lt;/p&gt;
&lt;p&gt;این&lt;a title="Bryan introduction" href="http://www.voidrealms.com/contact.aspx" target="_blank"&gt; آقا برایان&lt;/a&gt; قبلا یه شرکت برنامه نویسی داشتن‌، که توسط یه کمپانی بزرگ‌تر خریداری شد‌، حالا ایشون هم قصد دارن که یه زندگی بی‌دغدغه رو تجربه کنن و سعی دارن که به چنین آموزش‌هایی ادامه بدن‌.&lt;/p&gt;
&lt;p&gt;آموزش‌هایی که بیشتر از همه توجه من رو به خودشون جلب کردن‌، بیست و خرده‌ای آموزش زبان C++ بود که من در محیط لینوکس (‌متفاوت با آقای برایان‌) از اون‌ها خیلی استفاده بردم‌، و آموزش Qt C++ که با رسیدن شماره قسمت‌هاش به ۷۸ نوید یه آموزش کامل و خوب رو برای این محیط توسعه به آدم می‌ده‌. من هنوز دارم روی یاد گرفتن C++ تمرکز می‌کنم‌، و قصد دارم بعد از اون به سراغ Qt برم‌.&lt;/p&gt;
&lt;p&gt;حجم آموزش‌ها به طور متوسط چیزی در حدود ده مگ هست‌، پس پیشنهاد می‌کنم‌، حتما اون‌ها رو دانلود و آرشیو کنید که بتونید در موقع نیاز بهشون برگردید‌. روون بودن آموزش‌ها و مثال‌های کاربردی‌ای که زده می‌شه به شما به درک مفاهیم مختلف کمک می‌کنم‌.&lt;/p&gt;
&lt;p&gt;فقط به این&lt;span style="color: #993300;"&gt;&lt;strong&gt;نکته&lt;/strong&gt; توجه داشته باشید‌، اگر هنوز به هیچ زبان دیگه‌ای برنامه نویسی نکردین و یا با مفاهیم اولیه برنامه نویسی‌، نظیر شروط‌، حلقه‌ها و غیره آشنا نیستین‌، آموزش‌های C++ این مجموعه به درد شما نمی‌خوره‌. بهتره یا از یه منبع دیگه استفاده کنید‌، و یا یه زبان دیگه مثل جاوا رو یاد بگیرید‌.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;وقتی هم که زبان مورد علاقتون رو یاد گرفتید می‌تونید از سایت &lt;a title="voidrealms official website" href="/posts/voidrealms" target="_blank"&gt;voidrealms.com&lt;/a&gt; به تعدادی سورس و نرم‌افزار که جناب برایان آماده کردن دسترسی داشته باشید که می‌تونه کمک خوبی به یاد‌گیری‌تون باشه‌.&lt;/p&gt;</description><category>c++</category><category>java</category><category>Qt</category><category>youtube</category><category>برنامه نویسی</category><category>دوره</category><category>معرفی منبع</category><guid>http://shahinism.github.io/posts/blog13900420ywtywb-y-dnshgh-prdh-wl.html</guid><pubDate>Mon, 11 Jul 2011 20:36:39 GMT</pubDate></item></channel></rss>