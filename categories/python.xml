<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>شاهین (python)</title><link>//5hah.in/</link><description></description><atom:link type="application/rss+xml" href="//5hah.in/categories/python.xml" rel="self"></atom:link><language>fa</language><lastBuildDate>Mon, 09 Nov 2015 19:58:28 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>وقایع نگاری یک دیباگ: وضعیت عجیب MongoDB</title><link>//5hah.in/posts/multithreading-bug-experiment-on-PyMongo-driver.html</link><dc:creator>شاهین آزاد</dc:creator><description>&lt;div&gt;&lt;p&gt;استفاده از Mongo و Python برای ایجاد یک RESTFUL API دیگر آن‌چنان هم سناریوی دور از انتظاری نیست، خصوصا این که اگر کمی جستجو کنید می‌بینید که افراد زیادی اشاره به پایداری و Performance همچین استکی می‌کنند و راه‌کار‌های بسیار زیادی نیز برای بهتر کردن آن ارائه کرده‌اند. در یکی از پروژه‌های تیم &lt;a class="reference external" href="http://www.foundersbuddy.com/"&gt;فاندرز&lt;/a&gt; ما هم با استکی به شرح زیر، RESTFUL API مربوط به اپلیکیشمان را طراحی‌کرده‌ایم:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://mongodb.org"&gt;Mongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://api.mongodb.org/python/"&gt;PyMongo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://djangoproject.com"&gt;Django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://memcached.org"&gt;Memcached&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://uwsgi.readthedocs.org/"&gt;uWsgi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nginx.com"&gt;Nginx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;در چهار ماه اول لانچ API، هیچ مشکلی در داده‌های دریافتی و پردازش‌های مورد نیاز مشاهده نمی‌شد. Performance کلی استک هم در حد قابل قبولی جواب‌گوی نیاز‌ها بود. تا این که با تغییری در نحوهٔ ارائهٔ خدمات پروژهٔ اصلی‌، حجم کاربران سرویس به نحو چشم‌گیری بالا رفت و ماجرا آغاز شد!&lt;/p&gt;
&lt;p&gt;مشکل ایجاد شده‌، نه در Performance سیستم بود و نه حتی می‌توان گفت که پایداری API زیر سوال رفته بود. قضیه از این قرار بود که درخواست‌هایی که منجر به خواندن داده از پایگاه دادهٔ سرویس بود‌ (Mongo) در زمان‌های خاصی از روز‌ (که عمدتا تایم شلوغی برای پروژه بود) تنها تکه‌ای از داده‌های مورد انتظار را بر می‌گرداندند. برای مثال اگر ما انتظار داشتیم که کوئری X روی دیتابیس‌، شامل ۲۰ سند (Document منظور آبجکت‌های دیتابیس Mongo است) باشد‌، بعضی از درخواست‌ها نتیجه‌ای در بازه‌ای کوچکتر از ۲۰ را بر می‌گرداند.&lt;/p&gt;
&lt;p&gt;قضیه جایی بحرانی می‌شد که این نتیجه را برای یک بازهٔ زمانی مشخص Cache می‌کردیم، و خوب در صورت خراب شدن یکی از این کوئری‌ها‌، کاربران در آن مدت‌، نتیجهٔ ناقص را مشاهده می‌کردند. جدای از این، هیچ ضعف مشخصی از سیستم برای تراکنش‌ها مشاهده نمی‌شد.&lt;/p&gt;
&lt;p&gt;&lt;a href="//5hah.in/posts/multithreading-bug-experiment-on-PyMongo-driver.html"&gt;بیشتر بخوانید…&lt;/a&gt; (7 دقیقه برای خواندن باقی مانده)&lt;/p&gt;&lt;/div&gt;</description><category>mongodb</category><category>multithreading</category><category>nosql</category><category>performance</category><category>PyMongo</category><category>python</category><guid>//5hah.in/posts/multithreading-bug-experiment-on-PyMongo-driver.html</guid><pubDate>Mon, 09 Nov 2015 06:28:21 GMT</pubDate></item><item><title>py3status ابزار مناسب برای گرفتن اطلاعات در نوار ابزار i3</title><link>//5hah.in/posts/py3status.html</link><dc:creator>شاهین آزاد</dc:creator><description>&lt;div&gt;&lt;p&gt;قبلا در مورد &lt;a class="reference external" href="http://i3wm.org/"&gt;i3&lt;/a&gt; &lt;a class="reference external" href="http://shahinism.github.io/posts/blog13910415tjrbh-khr-b-i3-ykh-rgyb-qdr.html"&gt;حرف زده‌ام&lt;/a&gt; و نوشته‌ام که چطور با شل اسکریپت، و برای جلوگیری از مصرف زیاد رم (که Conky قاتلش بود) اطلاعات وضعیت سیستمم را در i3bar &lt;a class="reference external" href="http://shahinism.github.io/posts/blog13910904dryft-tlt-systm-bdwn-stfdh-z-conky.html"&gt;نمایش می‌دهم&lt;/a&gt;. خوب، حقیقتش بعد از مدتی فهمیدم که شل اسکریپتم در ازای اجرای طولانی مدت، رم زیادی می‌خورد و از طرفی، خیلی ساده است. خوب یکی از مزیت‌های &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; این است که اطلاعات را به صورت رنگی نمایش می‌دهد که جدای از زیبایی بصری، به درک سریع اطلاعات کمک می‌کند. ولی بدبختی این &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; هم این است که به قدر کافی قابل گسترش نیست و ابزارهایی هم که خودش در اختیارتان می‌گذارد فوق‌العاده محدود است!&lt;/p&gt;
&lt;p&gt;این وضعیت از قرار تنها مرا آزار نمی‌داده. ultrabug روی github پروژهٔ پایتونی‌ای را &lt;a class="reference external" href="https://github.com/ultrabug/py3status"&gt;شروع کرده&lt;/a&gt; که در واقع حکم یک پوشش برای &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; را دارد. وظیفهٔ این پروژه این است که اسکریپت پایتونی شما را تحویل گرفته و آن را با کمک &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; در i3bar به نمایش در آورد. خوبی ویژه‌اش این است که شما هم می‌توانید خودتان اسکریپت بنویسید و هم از ابزارهای آمادهٔ &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; استفاده کنید و در آخر هم از فایل تنظیمات &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; برای تنظیم هر دو ابزار بهره بگیرید.&lt;/p&gt;
&lt;div class="section" id="id4"&gt;
&lt;h2&gt;نصب و ساخت اسکریپت&lt;/h2&gt;
&lt;p&gt;برای شروع کافیست آن را نصب کرده و دستور زیر را در فایل تنظیمات i3‌تان قرار دهید (مسیر ‎ ~/‌.‌i3/config):&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_09207f39f93f4cc5a037d3846d0a7d90-1"&gt;&lt;/a&gt;bar &lt;span class="o"&gt;{&lt;/span&gt;
&lt;a name="rest_code_09207f39f93f4cc5a037d3846d0a7d90-2"&gt;&lt;/a&gt;  status_command py3status -i ~/.i3/py3status -c ~/.i3/i3status.conf
&lt;a name="rest_code_09207f39f93f4cc5a037d3846d0a7d90-3"&gt;&lt;/a&gt;&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;با این دستور ما به &lt;a class="reference external" href="http://i3wm.org/"&gt;i3&lt;/a&gt; می‌فهمانیم که باید از &lt;a class="reference external" href="https://github.com/ultrabug/py3status"&gt;py3status&lt;/a&gt; برای نمایش داده‌های i3bar استفاده کند. همینطور به &lt;a class="reference external" href="https://github.com/ultrabug/py3status"&gt;py3status&lt;/a&gt; می‌گوییم که فایل تنظیمات &lt;a class="reference external" href="http://i3wm.org/i3status/"&gt;i3status&lt;/a&gt; در کدام مسیر واقع شده و در کدام مسیر باید به دنبال اسکریپت‌های پایتونی ما بگردد (‎‌~/‌.‌i3/py3status که یک دایرکتوری برای اسکریپت‌های ماست).&lt;/p&gt;
&lt;p&gt;لازمهٔ اسکریپتی که می‌نویسید این است که حتما کلاسی به اسم &lt;a class="reference external" href="https://github.com/ultrabug/py3status"&gt;Py3status&lt;/a&gt; داشته باشد که اطلاعات نهایی را در آن پردازش کرده و نمایش دهد. همچنین این کلاس باید در پاسخ فراخوانی‌اش موقعیتی که می‌خواهیم نتیجهٔ اسکریپت در آن نمایش داده شود (به عدد) و کل رشتهٔ خروجی را بازگرداند. چیزی مثل return(0, response)‎‌. برای نمونه به این کلاس توجه کنید:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Py3status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-2"&gt;&lt;/a&gt;  &lt;span class="sd"&gt;"""&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-3"&gt;&lt;/a&gt;&lt;span class="sd"&gt;  System status in i3bar&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-4"&gt;&lt;/a&gt;&lt;span class="sd"&gt;  """&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-5"&gt;&lt;/a&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;ramInfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i3status_config&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-6"&gt;&lt;/a&gt;      &lt;span class="sd"&gt;"""calculate the memory (RAM) status and return it.&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-8"&gt;&lt;/a&gt;&lt;span class="sd"&gt;      """&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-9"&gt;&lt;/a&gt;      &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GetData&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-10"&gt;&lt;/a&gt;      &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;'full_text'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;'name'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;'ram_info'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-11"&gt;&lt;/a&gt;      &lt;span class="n"&gt;total_mem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;used_mem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;used_mem_percent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-13"&gt;&lt;/a&gt;      &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;used_mem_percent&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-14"&gt;&lt;/a&gt;          &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i3status_config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color_good'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-15"&gt;&lt;/a&gt;      &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;used_mem_percent&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-16"&gt;&lt;/a&gt;          &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i3status_config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color_degraded'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-17"&gt;&lt;/a&gt;      &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-18"&gt;&lt;/a&gt;          &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;i3status_config&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'color_bad'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-19"&gt;&lt;/a&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-20"&gt;&lt;/a&gt;      &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'full_text'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"RAM: &lt;/span&gt;&lt;span class="si"&gt;%.2f&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="si"&gt;%.2f&lt;/span&gt;&lt;span class="s"&gt; GB (&lt;/span&gt;&lt;span class="si"&gt;%d%%&lt;/span&gt;&lt;span class="s"&gt;)"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; \
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-21"&gt;&lt;/a&gt;                              &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;used_mem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;total_mem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;used_mem_percent&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-22"&gt;&lt;/a&gt;      &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'cached_until'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-23"&gt;&lt;/a&gt;
&lt;a name="rest_code_1cee10d58c0c416986df065bf832abad-24"&gt;&lt;/a&gt;      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id5"&gt;
&lt;h2&gt;پوشهٔ نمونه‌ها&lt;/h2&gt;
&lt;img alt="https://dl.dropboxusercontent.com/u/25017694/Blog-photos/py3status_in_use.png" src="https://dl.dropboxusercontent.com/u/25017694/Blog-photos/py3status_in_use.png"&gt;
&lt;p&gt;کاربران &lt;a class="reference external" href="https://github.com/ultrabug/py3status"&gt;py3status&lt;/a&gt; ابزارهای مختلفی در این زمینه نوشته‌اند که در پوشهٔ Examples پروژه می‌توانید نمونه‌هایی از آن‌ها را ببینید. برای مثال دو اسکریپت netdata (که وظیفهٔ بررسی سرعت اینترنت و حجم دریافتی یا ارسالی داده را بر عهده دارد) و sysdata (که میزان مصرفی رم را محاسبه می‌کند) را من نوشته‌ام و در پروژه اصلی به اشتراک گذاشته‌ام. همینطور یک اسکریپت قابل کنترل با کیبورد برای &lt;a class="reference external" href="http://shahinism.github.io/posts/blog13900424ashnyy-b-tkhnykh-mdyryt-zmn-pmwdwr-.html"&gt;pomodoro&lt;/a&gt; هم ساخته شده که می‌توانید مدیریت زمان فعالیتتان را با آن انجام دهید.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>i3</category><category>i3bar</category><category>i3status</category><category>py3status</category><category>python</category><guid>//5hah.in/posts/py3status.html</guid><pubDate>Thu, 12 Sep 2013 07:01:45 GMT</pubDate></item><item><title>از وردپرس به نیکولا</title><link>//5hah.in/posts/from-wordpress-to-nikola.html</link><dc:creator>شاهین آزاد</dc:creator><description>&lt;div&gt;&lt;p&gt;خیلی وقت بود که به فکر انتقال وبلاگم به یکی از سیستم‌های وبلاگ ایستا (Static) بودم. عمده‌ترین دلیلش هم قابلیت خوب Github برای انتشار چنین وبلاگ‌هایی بود. اما بیشتر از یک سال این فکر را عقب انداختم تا دیگر کم کم نگهداری از هاست و دامین وبلاگ آن هم با نوع سرویس دهی شرکت‌های ایرانی‌، برایم خسته کننده شد. وبلاگ‌نویسی قرار نیست تمام فکر و ذکرم را به خودش مشغول کند‌! قرار است یک جای ساده باشد که خیلی راحت بتوان تویش نوشت و منتشر کرد. (الان که دارم می‌نویسم‌، دامین اصلی وبلاگم Shahinism.com لنگ به هواست و نمی‌توانم DNS را به هاست قبلی منتقل کنم)&lt;/p&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;چرا یک وبلاگ ایستا؟&lt;/h2&gt;
&lt;p&gt;خوب به طور کلی دلایلش از این قرارند:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;سرعت‌، سرعت‌، سرعت:&lt;/strong&gt; دیگر در این نوع از وبلاگ‌، خبری از پایگاه داده نیست. همین‌طور قرار نیست هیچ پردازشی در سمت سرور وبلاگ قرار گیرد. و خوب طبیعتا خیلی خیلی امکاناتی که این ابزار‌ها فراهم می‌کنند را نمی‌توانم داشته باشم. اما حقیقتش در یک وبلاگ‌، به بسیاری از این ابزار‌ها نیاز ندارم. به هر حال این نبودن‌ها‌، یعنی سرعت بیشتر. در مورد من‌، سرعت لود صفحات‌، حدودا سه برابر بیشتر شد.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;سادگی:&lt;/strong&gt; فکر نمی‌کنم چیز زیادی در این زمینه برای گفتن باقی گذاشته باشم.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;امنیت:&lt;/strong&gt; وقتی تنها با صفحات سادهٔ HTML روبرو هستید. وقتی یک سیستم انتشار قابل اطمینان دارید‌‌، دیگر نباید نگران آپدیت بودن ابزار وبلاگ‌نویسی‌تان و یا هک شدنش باشید. این‌طور نیست؟&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;محدود نبودن پهنای باند:&lt;/strong&gt; این یکی از آن کابوس‌هایی است که بی‌خبر به سراغ‌تان می‌آید. ولی خوب خوشبختانه روی گیت‌هاب‌، این نگرانی را نداریم ;-)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;قابلیت بازیابی:&lt;/strong&gt; خوب این یکی زیاد مربوط به خود سیستم وبلاگ‌نویسی نیست. ولی چون نتیجهٔ کارش را می‌توان با هر سیستم دلخواهی منتشر کرد و من گیت را انتخاب کرده‌ام‌، خیلی راحت می‌توانم در صورت گند زدن‌، بدون هیچ استرسی آن را به حالت قبل برگردانم. این قابلیت روی هاست‌های اشتراکی پولی و گران است و در سرور‌های اختصاصی‌، خیلی پر دردسر‌تر از چیزی که در این‌جا با آن طرفیم ;-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;کدام سیستم؟&lt;/h2&gt;
&lt;p&gt;به هر حال‌، پس از قطعی شدن تصمیم انتقال‌، باید یکی از سیستم‌ها را انتخاب می‌کردم. به طور کلی این سیستم‌ها اعم از &lt;a class="reference external" href="http://nikola.ralsina.com.ar/"&gt;Nikola&lt;/a&gt;, &lt;a class="reference external" href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt;, &lt;a class="reference external" href="http://octopress.github.ip/"&gt;Octopress&lt;/a&gt; و خیلی‌های دیگر که با یک سرچ در اینترنت می‌توانید پیدایشان کنید‌، تفاوت عمده‌ای در نتیجهٔ کار ندارند. طرز کارشان فوق‌العاده ساده است. شما متن پست وبلاگ‌تان را در یک فایل حالا به هر فرمتی که سیستم مورد نظر برای‌تان مهیا کرده می‌نویسید‌، یک قالب هم بر اساس قوائد تعیین شدهٔ سیستم به آن می‌خورانید و می‌گویید که وبلاگ آماده شود. در نهایت این سیستم می‌آید یک سایت کاملا ایستا در فایل‌های html آماده می‌کند که شامل پست‌های شماست و بر اساس قالب مورد نظر‌تان قالب‌بندی شده.&lt;/p&gt;
&lt;p&gt;من &lt;a class="reference external" href="http://nikola.ralsina.com.ar/"&gt;Nikola&lt;/a&gt; را انتخاب کردم‌، چون اولا پایتونی است‌ و بعد از آن خیلی راحت‌تر از &lt;a class="reference external" href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt; که آن هم پایتونی است نصب می‌شود. همین!&lt;/p&gt;
&lt;p&gt;&lt;a href="//5hah.in/posts/from-wordpress-to-nikola.html"&gt; بیشتر بخوانید …&lt;/a&gt; (6 دقیقه برای خواندن باقی مانده)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Nikola</category><category>python</category><category>Wordpress</category><guid>//5hah.in/posts/from-wordpress-to-nikola.html</guid><pubDate>Mon, 13 May 2013 05:51:43 GMT</pubDate></item></channel></rss>