<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>شاهینیسم (KDE)</title><link>http://shahinism.github.io</link><description>بعضی وقت‌ها باید قبل از این که بتوانید راه بروید‌، بدوید‌!</description><lastBuildDate>Tue, 28 May 2013 11:10:19 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>تبدیل PDF فارسی به متن با استفاده از چند ابزار لینوکسی و کمی پایتون</title><link>http://shahinism.github.io/posts/blog13910902tbdyl-pdf-frsy-bh-mtn-b-stfdh-z-chnd-b.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;همین اول کار بگویم که این روش تنها مخصوص موقعی است که PDF به صورت دیجیتالی تولید شده باشد و کاراکتر‌ها تصویر نباشند‌‌، که خوب برای کاراکتر‌های تصویری‌، نیاز به روش‌های اپتیکال است که فعلا در این بحث ما نمی‌گنجد‌. &lt;del&gt;برای نمونه من از کتاب _* که معرفی دوست خوبم &lt;a title="وبلاگ شخصی ایمان" href="http://emanlog.com" target="_blank"&gt;ایمان&lt;/a&gt; است استفاده می‌کنم‌.&lt;/del&gt; نمونهٔ اولیه بنا به دلایلی معلوم با&lt;a title="Ashamloo" href="http://dl.dropbox.com/u/25017694/Blog_files/Ahanha_Va_Ehsas_(www.txt.ir).pdf"&gt; کتابی&lt;/a&gt; از احمد شاملو عوض شد!
اول از همه PDF را با برنامهٔ PDFخوان پیش‌فرض میزکار KDE یعنی Okular باز می‌کنیم‌. یک نگاه به قد و بالایش می‌اندازیم و سپس از منوی فایل‌، گزینهٔ Export as و سپس Plain text را انتخاب می‌کنیم‌. خروجی این عمل ما یک فایل متنی است که فکر می‌کنیم همه کار را به درستی انجام داده‌. (البته من که اول اصلا فکرش را هم نمی‌کردم که بتوان خروجی فارسی گرفت) در نگاه اول کارمان تمام شده است‌. ولی بگذارید آن را با یک ویرایشگر باز کنیم‌. آن را با ایمکس باز می‌کنم و از آن‌جایی که تنظیم فونت‌هایم را از روی روشی که فرود عزیز در stackoverflow&lt;a title="emacs font for western and other like rtl" href="http://stackoverflow.com/questions/11012627/emacs-font-for-western-and-other-like-rtl" target="_blank"&gt; پیشنهاد کرده‌&lt;/a&gt;، انجام داده‌ام نکته‌ای عجیب به نظر می‌رسد‌!&lt;/p&gt;
&lt;p&gt;مشکل این‌جاست که در ایمکس فونت سراسری‌ام متن فارسی را به صورت جدا جدا نشان می‌دهد‌. ولی طبق روشی که به آن اشاره کردم‌، کاراکتر‌هایی که در رنج خاصی از کد‌های یونیکد هستند‌، باید با فونت Tahoma (انتخاب من) نمایش داده شوند. اما وقتی فایل خروجی Okular را باز می‌کنم می‌بینم کاراکتر‌ها کاملا درست‌، ولی با فونتی غیر از تاهوما دیده می‌شوند‌. خوب تجربه ثابت کرده که هیچ مشکلی به این راحتی حل نمی‌شود‌. کمی از خروجی را به یک فایل tex تبدیل می‌کنم و خروجی PDFش را بررسی می‌کنم‌. خروجی تقریبا قابل قبول است ولی در بعضی از خطوط کاراکتر‌ها به صورت مبهمی به هم ریخته‌اند‌. از آن‌جایی که خودم برنامهٔ officeای روی سیستم ندارم و &lt;a title="وقتی دزدی می‌کن(م،ن،ید)" href="http://shahinism.com/blog/1391/08/25/%d9%88%d9%82%d8%aa%db%8c-%d8%af%d8%b2%d8%af%db%8c-%d9%85%db%8c%e2%80%8c%da%a9%d9%86%d9%85%d8%8c%d9%86%d8%8c%db%8c%d8%af/" target="_blank"&gt;وضع اینترنت‌ام&lt;/a&gt; هم معلوم است‌، از دوست &lt;a title="لیبره آفیس قدم رو" href="http://emanlog.com/?p=303" target="_blank"&gt;libreoffice کار قهارم&lt;/a&gt; می‌خواهم که فایل خروجی Okular را یک بار دیگر و این‌بار با libreoffice تست کند و ببیند آیا قابل ویرایش است یا نه‌؟ ایمان در جواب می‌گوید که کاراکتر‌ها مثل تصویر عمل می‌کنند و قدرت ویرایش چندانی روی آن‌ها ندارم.(اگر دروغ گفته‌، یقهٔ خودش رو بگیرید ;-))&lt;/p&gt;
&lt;p&gt;پس حالا نوبت این است که کمی دست‌هایمان را کثیف‌تر کنیم‌. مساله ساده است‌. فایلی داریم شامل کاراکتر‌هایی که امیدواریم حداقل یونیکد باشند‌، ولی می‌خواهیم آن‌ها را به رنج استانداردی که می‌شناسیم تبدیل کنیم (یک Find &amp;amp; Replace سریع و دوست داشتنی D:)‌. پایتون دوست‌داشتنی چند تابع خیلی‌، خیلی باحال برای کمک به ما در همچین وضعیت‌هایی دارد‌. اولی‌شان ord است‌. کارش این است که یک کاراکتر را به عنوان ورودی بگیرد و در خروجی کد معادلش را چاپ کند‌. دیگری unichr است که تقریبا کاری برعکس کار ord می‌کند‌. یک کد (که فکر می‌کند یونیکد است) در ورودی می‌گیرد‌، و کاراکتر یونیکد معادلش را در خروجی بر می‌گرداند‌.&lt;/p&gt;
&lt;p&gt;پس برای شروع کار چند تابع کوچک می‌نویسیم که برای دستکاری فایل کمک‌مان کند‌. تابع اول‌مان‌، چیزی است که در بقیه راه نیازش داریم‌. تابعی که یک فایل را از ورودی بخواند‌:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;def read_file&lt;span class="o"&gt;(&lt;/span&gt;file_name&lt;span class="o"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;the_file&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; codecs.open&lt;span class="o"&gt;(&lt;/span&gt;file_name, &lt;span class="nv"&gt;encoding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;return &lt;/span&gt;the_file
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;همین‌طور برای این که خیال‌مان راحت شود‌، تابعی می‌نویسیم که کل محتوای فایل ورودی‌اش را به صورت کاراکتر به کاراکتر (هر کاراکتر در یک خط) چاپ کند:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;def show_characters&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;line in read_file&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;.readlines&lt;span class="o"&gt;()&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;char in line:

print char
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;حالا نوبت بخش هیجان‌انگیز‌تر ماجرا می‌رسد‌. تابعی دیگر می‌نویسیم که این‌بار به جای کاراکتر‌ها‌، کد‌های معادل‌شان را چاپ کند:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;def show_unicode_code&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;line in read_file&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;.readlines&lt;span class="o"&gt;()&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;char in line:

print ord&lt;span class="o"&gt;(&lt;/span&gt;char&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;و سر‌انجام تابعی می‌نویسیم که عکس کار بالا را انجام دهد:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;def replace_unicode_char&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;line in read_file&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;.readlines&lt;span class="o"&gt;()&lt;/span&gt;:

print unichr&lt;span class="o"&gt;(&lt;/span&gt;int&lt;span class="o"&gt;(&lt;/span&gt;line&lt;span class="o"&gt;))&lt;/span&gt;.encode&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'utf-8'&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;مطمئنا می‌شد این توابع را به صورت‌های ساده‌تری هم نوشت‌. ولی خوب اولا سواد من به همین‌قدر می‌رسید‌، دوما هم به نظرم برنامه خوانا‌تر شده‌. برای کسانی که پایتون می‌دانند به نظرم کد‌ها به قدر کافی گویا هستند (آن‌هایی هم که نمی‌دانند کافیست انگلیسی‌شان کفایت کند‌. نا سلامتی هنر پایتون همین است D:). فقط یک نکته در تابع replace_unicode_char باقی می‌ماند و آن هم این که کاراکتر‌های ورودی به صورت رشته هستند و قبل از خوراندنشان به unichar باید تبدیل به عدد (int) شوند‌. همینطور اگر می‌خواهید کاراکتر‌ها را در خروجی چاپ کنید‌، باید به صورت utf-8 کد کنید که خود دستور به قدر کافی گویا هست‌.&lt;/p&gt;
&lt;p&gt;من کل این توابع به علاوهٔ یک تابع مهم‌تر از آن‌ها را (که پایین‌تر توضیح‌اش می‌دهم) به صورت یک اسکریپت نوشته‌ام که می‌توانید از&lt;a title="لینک به اسکریپت chrvalidator.py" href="https://github.com/shahinism/Scripts/blob/master/Python/chrvalidator/chrvalidator.py" target="_blank"&gt; این‌جا &lt;/a&gt;دریافتش کنید‌. که خوب به عنوان راهنما اضافه کنم که در صورتی که خواستید فایل را به صورت کاراکتر به کاراکتر در خروجی ببینید از دستور زیر بهره بگیرید:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python chrvalidator.py -i INPUT_FILE -c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;اگر خواستید که کد‌های یونیکد کاراکتر‌هایش را ببینید از دستور زیر استفاده کنید:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python chrvalidator.py -i INPUT_FILE -u
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;و اگر هم خواستید که بر عکس کار فوق (تبدیل کد‌های یونیکد به کاراکتر‌های نظیرشان) را انجام دهید‌، به جای ‎-u در دستور فوق از ‎-U استفاده کنید‌. خوب بگذارید به مسالهٔ اصلی‌مان برگردیم‌. برای شروع کار بیایید با دستورات زیر‌، لیستی از کد‌های کاراکتر استفاده شده در فایل‌مان به دست آوریم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python chrvalidator.py -i ashamloo.txt -u &amp;amp;gt; chrcodes.txt

sort -u chrcodes.txt &amp;amp;gt; uniq.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خوب همان‌طور که معلوم است اول از همه کد تمام کاراکتر‌ها را استخراج کردیم‌. و سپس از آن‌جایی که مطمئنیم کاراکتر‌های تکراری زیادی داریم‌، و صد البته مطمئن‌تریم که یک فایل مرتب شده بیشتر به دردمان می‌خورد با استفاده از دستور sort -u کاراکتر‌های تکراری را حذف کرده و فایل را مرتب می‌کنیم‌. حالا همین فایل مرتب شده را دوباره به اسکریپت‌مان می‌خورانیم تا کاراکتر‌های نظیر‌شان را پیدا کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python chrvalidator.py -i uniq.txt &amp;amp;gt; uniqchr.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;یک بررسی سرسری‌، نشان‌مان می‌دهد که تنها کاراکتر‌های محدودی از مجموع کاراکتر‌ها نیاز به تعویض دارند‌. دسته‌ای از کل کاراکتر‌ها مربوط به حروف انگلیسی یا اعدادند‌. دسته‌ای دیگر هم در این بین کاراکتر‌های استانداردند. و این وسط ما اکثرا نیاز به تغییر کاراکتر‌هایی موسوم به &lt;a title="unicode character table" href="http://www.ssec.wisc.edu/~tomw/java/unicode.html#xFE70" target="_blank"&gt;Arabic Presentation Forms-B&lt;/a&gt; داریم‌. خوب همانطور که می‌بینید در بین این کاراکتر‌ها برای نمونه حرف «ب» در سه حالت مختلف «اول‌، وسط‌، آخر» نمایش داده می‌شود که هر کدام کاراکتر مربوط به خود و در نتیجه کد مربوط به خود را دارند‌. برای همین ما تابعی دیگری نیز به صورت زیر به اسکریپت‌مان اضافه می‌کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="k"&gt;for &lt;/span&gt;line in read_file&lt;span class="o"&gt;(&lt;/span&gt;input_file&lt;span class="o"&gt;)&lt;/span&gt;.readlines&lt;span class="o"&gt;()&lt;/span&gt;:

&lt;span class="k"&gt;for &lt;/span&gt;char in line:

&lt;span class="k"&gt;if &lt;/span&gt;ord&lt;span class="o"&gt;(&lt;/span&gt;char&lt;span class="o"&gt;)&lt;/span&gt; in &lt;span class="o"&gt;(&lt;/span&gt;64343, 64344, 64345&lt;span class="o"&gt;)&lt;/span&gt;:

&lt;span class="nv"&gt;char&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"پ"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;در این تابع همان‌طور که پر واضح است‌، می‌گوییم فایل را کاراکتر به کاراکتر بخوان‌، کد دسیمال کاراکتر را پیدا کن‌، و اگر این کد دسیمال شبیه به یکی از سه عدد (کد‌های مربوط به حروف پ اول‌، وسط و آخر) بود آن را با حرف پ جایگزین کن‌. ساده است‌، این‌طور نیست؟ خوب من این کار را برای تقریبا چهل کاراکتر استاندارد انجام دادم که نتیجه‌اش در اسکریپت معلوم است (اگر شما خواستید فایل دیگری را به این روش تبدیل کنید و کاراکتری به این لیست اضافه کردید‌، خوشحال می‌شوم که اسکریپت تکمیل شده‌تان را با من و بقیه به اشتراک بگذارید‌)‌. در آخر کار هم با دستور زیر تابع را می‌بندیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;sys.stdout.softspace&lt;span class="o"&gt;=&lt;/span&gt;False

try:

print char.encode&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"utf-8"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;,

except UnicodeDecodeError:

print char,
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خوب خط اول این مجموعه مربوط به این است که به پایتون بفهمانیم در هنگام چاپ کاراکتر‌ها بین‌شان فاصله نگذارد‌. اگر این مقدار درست باشد‌، کاراکتر‌ها به صورت س ل ا م نوشته می‌شوند، که خوب به درد ما نمی‌خورد‌. همینطور ممکن است به دلیل این که بعضی اوقات در بین کاراکتر‌ها‌، کاراکتر به صورت utf-8 کد شده‌ای پیدا شود و خروجی را بشکند‌، با یک try, except جلوی این اتفاق را می‌گیریم‌، که یک کمی ممکن است گیج کنند باشد‌. در این مورد فقط به من اعتماد داشته باشید که اسکریپت کار می‌کند ;-)&lt;/p&gt;
&lt;p&gt;برای پایان کار هم فایل تکست اولیه‌مان را به صورت زیر با اسکریپت حاضرمان ویرایش می‌کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;python chrvalidator.py -i ashamloo.txt &amp;amp;gt; validashamloo.txt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خوب کار تقریبا تمام شد‌. ولی خوب‌، کامپیوتر است دیگر‌. همیشه که درست عمل نمی‌کند‌. فایل خروجی نمونهٔ مرا در&lt;a title="ashamloo text file" href="http://dl.dropbox.com/u/25017694/Blog_files/ashamloo.txt.xz" target="_blank"&gt; این‌جا&lt;/a&gt; می‌بینید‌. خالی از اشکال هم نیست‌، ولی خوب طبیعتا مشکلات زیادی را برایم حل می‌کند (دیگر لازم نیست به آن فونت کذایی Arial زل بزنم). دیگر باقی کار‌ها می‌افتد گردن یک ویراستار به درد بخور‌. (البته شاید بتوان از &lt;a title="نسخهٔ جدید ویرایشگر متن نگار" href="http://shahinism.com/blog/1391/07/10/%d9%86%d8%b3%d8%ae%d9%87%d9%94-%d8%ac%d8%af%db%8c%d8%af-%d9%88%db%8c%d8%b1%d8%a7%db%8c%d8%b4%da%af%d8%b1-%d9%85%d8%aa%d9%86-%d9%86%da%af%d8%a7%d8%b1/" target="_blank"&gt;نگار&lt;/a&gt; هم کمک گرفت‌، که فعلا دارم شدیدا رویش کار می‌کنم‌. نسخهٔ فعلی‌اش مشکلاتی دارد‌، ولی امیدوارم بتوانم حل‌شان کنم‌)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;پی‌نوشت:&lt;/strong&gt; Okular از قرار‌، قادر نیست PDF‌هایی که رمزگذاری شده‌اند را باز کند (خودم امتحان نکردم) در آن صورت یک ابزار پایتونی برای این کار وجود دارد که در آینده در موردش می‌نویسم‌. تا این‌جای کار‌، خروجی‌های این تابع زیاد با روش ذکر شده همخوانی ندارد‌، پس باید به فکر دستکاری‌اش باشم‌. اسم این تابع هم در صورتی که دل‌تان می‌خواهد کشفش کنید pdfminer است.&lt;/p&gt;</description><category>KDE</category><category>LaTeX</category><category>ocr</category><category>okular</category><category>PDF</category><category>Python</category><category>tex</category><category>ایمکس</category><category>بررسی</category><category>برنامه نویسی</category><category>حل مشکل</category><category>نرم افزار</category><category>پایتون</category><category>کتاب</category><category>کدباز</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910902tbdyl-pdf-frsy-bh-mtn-b-stfdh-z-chnd-b.html</guid><pubDate>Thu, 22 Nov 2012 14:31:08 GMT</pubDate></item><item><title>ترمینال dropdown (مثل quake) در مدیر پنجرهٔ i3</title><link>http://shahinism.github.io/posts/blog13910801trmynl-dropdown-mthl-quake-dr-mdyr-pnjrh-i3.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;اولین بار که در KDE با Yakuake کار کردم‌، آن‌قدر برایم لذت‌بخش بود که بد جوری معتادش شدم‌. همین شد که بعد از &lt;a title="نصب Awesome WM روی اسلکور" href="http://shahinism.com/blog/1391/01/06/%d9%86%d8%b5%d8%a8-awesome-wm-%d8%b1%d9%88%db%8c-%d8%a7%d8%b3%d9%84%da%a9%d9%88%d8%b1/" target="_blank"&gt;مهاجرتم به Awesome&lt;/a&gt; هم خوشبختانه توانستم با کلی کپی/پیست اسکریپت‌های Lua &lt;a title="یک پوسته برای مدیر پنجره Awesome" href="http://shahinism.com/blog/1391/01/10/%db%8c%da%a9-%d9%be%d9%88%d8%b3%d8%aa%d9%87-%d8%a8%d8%b1%d8%a7%db%8c-%d9%85%d8%af%db%8c%d8%b1-%d9%be%d9%86%d8%ac%d8%b1%d9%87-awesome/" target="_blank"&gt;یک نمونه&lt;/a&gt; برای خودم دست و پا کنم‌.
اما &lt;a title="تجربهٔ کار با i3 یک رقیب قدر‌!" href="http://shahinism.com/blog/1391/04/15/%d8%aa%d8%ac%d8%b1%d8%a8%d9%87%d9%94-%da%a9%d8%a7%d8%b1-%d8%a8%d8%a7-i3-%db%8c%da%a9-%d8%b1%d8%ba%db%8c%d8%a8-%d9%82%d8%af%d8%b1%e2%80%8c/" target="_blank"&gt;وقتی به i3&lt;/a&gt; آمدم‌، چون دیگر خبری از آن زبان‌های اسکریپت‌نویسی قوی نبود‌، فکر می‌کردم غیر ممکن است همچین چیزی داشتن‌! البته یک بار هم سعی کردم &lt;a title="tilda home page" href="http://downloads.sourceforge.net/tilda" target="_blank"&gt;tilda&lt;/a&gt; را استفاده کنم (که طبق معمول از بیت‌های نیم‌سوز فرود کشفش کرده بودم). اما حقیقتش چند مشکل کتاب‌خانه‌ای اجازه نداد درست کامپایلش کنم و زیاد هم پیگیرش نشدم‌.&lt;/p&gt;
&lt;p&gt;گذشت تا امروز که دیدم Arch باز‌ها یک&lt;a title="HOWTO: get a quake-like urxvt terminal in openbox" href="http://downloads.sourceforge.net/tilda" target="_blank"&gt; کلکی سوار&lt;/a&gt; کرده‌اند و توانسته‌اند urxvt را به صورت quake در OpenBox (یک راهنمای عالی برای کار با این مدیرپنجره را دوست خوبم &lt;a title="وبلاگ ایمان امینی!" href="http://emanlog.com" target="_blank"&gt;ایمان&lt;/a&gt; در &lt;a title="Openbox on linuxreview wiki" href="http://wiki.linuxreview.ir/OpenBox" target="_blank"&gt;ویکی لینوکس ریویو&lt;/a&gt; فراهم کرده) اجرا کنند‌. بماند که کلی ژانگولر بازی در آوردم که پیاده‌اش کنم و اخرش نتوانستم در i3 اجرایش کنم‌.&lt;/p&gt;
&lt;p&gt;این شد که طبق معمول دست به&lt;a title="problem on i3 faq site" href="http://faq.i3wm.org/question/671/kuake-like-behavior-with-urxvt/" target="_blank"&gt; دامن i3 &lt;/a&gt;باز‌ها شدم و با کمال تعجب دیدم که نوشابه در کوزه و ما دنبال آب می‌گردیم‌! قضیه از این قرار است که i3 با تمام کوچکی‌اش یک قابلیت خیلی ماه دارد به اسم scratchpad. که یعنی می‌توانید با آن هر موقع خواستید هر پنجره‌ای را غیب کنید و هر وقت دیگر خواستید ظاهر کنید‌. این است که برای مثال ما که مصادف شده با مهاجرتم به ترمینال urxvt‌، این چنین i3 را کانفیگ می‌کنیم تا به نتیجهٔ دلخواه‌مان برسیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"dropdown_urxvt"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; move to scratchpad, border 1pixel

for_window &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"dropdown_urxvt"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; focus; resize grow width 300px

bindsym F12 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;instance&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"dropdown_urxvt"&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; scratchpad show, move position 110px 0px
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;آن بخش instance را داشته باشید تا در آخر کار بهش برگردیم‌. در خط اول می‌گوییم که اگر پنجرهٔ مورد نظرمان صدا شد‌، بفرستش به scratchpad و کلا آن بردارش را (که دور تمام پنجره‌ها در i3 وجود دارد) را حذف کن. در خط دوم هم همان پنجرهٔ مورد نظر را کمی عریض‌تر می‌کنیم‌. و در آخر کار هم در خط سوم می‌گوییم که هر وقت کلید F12 را زدیم‌، پنجرهٔ موردنظرمان را که برده‌ای آن پشت مشت‌ها‌، در فلان مختصات صفحه ظاهر کن‌.&lt;/p&gt;
&lt;p&gt;در مورد این توضیحات بالا می‌توانید به راحتی در &lt;a title="i3 user guide" href="http://i3wm.org/docs/userguide.html" target="_blank"&gt;راهنمای کاربران i3 &lt;/a&gt;اطلاعات به درد بخوری پیدا کنید‌. و اما می‌ماند نکات کنکوری:&lt;/p&gt;
&lt;p&gt;تا این‌جای کار‌، ما گفتیم که اگه پنجرهٔ مورد نظرمان را دیدی‌، چه کار کن‌. اما حالا مسئله این‌جاست که این پنجره را چطور ایجاد کنیم‌. طوری که منحصر به فرد باشد‌. هر چه باشد نمی‌خواهم هر بار که urxvt را صدا زدم همان بالا باز شود‌. گاهی به یک ترمینال گنده نیاز دارم‌!&lt;/p&gt;
&lt;p&gt;urxvt یک قابلیت خیلی به درد بخور دارد و آن هم این که می‌توان آن را به صورت daemon اجرا کرد‌. بعد هم هر وقت خواستیم ترمینالی باز کنیم‌، یک کلاینت از همان daemon باز می‌شود که مزیتش سرعت بالای در دسترس قرار گرفتن پنجره است‌.&lt;/p&gt;
&lt;p&gt;این است که اول از همه ترتیبی می‌دهیم که با باز شده i3 به صورت خودکار این daemon هم اجرا شود:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nb"&gt;exec &lt;/span&gt;urxvtd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;حالا هم نوبت به ساخت پنجره‌مان می‌رسد‌. ظاهر خوشی ندارد که هر بار به صورت دستی بازش کنم‌، چون بلافاصله غیب می‌شود و باید با F12 صدایش کرد‌. این است که این را هم می‌گذارم خود i3 موقع بالا آمدن اجرا کند‌. به هر حال ما که یک نمونه از این کلاینت بیشتر نمی‌خواهیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nb"&gt;exec &lt;/span&gt;urxvtc -name dropdown_urxvt
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ها‌، همین‌جاست که به i3 می‌فهمانیم که کدام پنجره منظورمان است‌. حالا کافیست که یک بار i3 را ریست کنیم و F12 را بزنیم‌. نتیجهٔ کار عالیست:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a href="http://dl.dropbox.com/u/25017694/Blog-photos/i3_urxvt_dropdown.png"&gt;&lt;img class="aligncenter" title="dropdown urxvt in i3" src="http://dl.dropbox.com/u/25017694/Blog-photos/i3_urxvt_dropdown.png" alt="dropdown urxvt in i3" width="491" height="369"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;پی‌نوشت:&lt;/strong&gt; درست است که طی حل این ماجرا راه‌های عجیب و غریبی را غیر از آسان‌ترین راهی که جلوی رویم بود انتخاب کردم‌، ولی چیز‌های جالبی یاد گرفتم که در پست‌های آینده در موردشان خواهم گفت ;-)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;پی‌نوشت۲:&lt;/strong&gt; ممکن است روی نسخهٔ استیبل i3 (در این تاریخ) با دستور focus که در این آموزش استفاده شده مشکل دارین‌. آخرین نسخهٔ git این مشکل را بر طرف کرده‌!&lt;/p&gt;</description><category>awesome</category><category>i3wm</category><category>KDE</category><category>quake</category><category>terminator</category><category>urxvt</category><category>yakuake</category><category>حل مشکل</category><category>نرم افزار</category><category>کدباز</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910801trmynl-dropdown-mthl-quake-dr-mdyr-pnjrh-i3.html</guid><pubDate>Mon, 22 Oct 2012 00:33:53 GMT</pubDate></item><item><title>سیر صعودی $ و روش‌های مختلفی که برای دانلود در لینوکس یاد گرفتم!</title><link>http://shahinism.github.io/posts/blog13910726syr-swdy-w-rwshhy-mkhtlfy-khh-bry-dn.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;از آب گل آلود ماهی گرفتن به این می‌گویند D:. به حول قوهٔ الهی و بعد از اول شدنمان در دنیا‌، سروری که از فرت آزادی بیان و عقیده از آن به عنوان چاقوی سوئیسی استفاده می‌کردیم‌، قیمتش ظرف یک دورهٔ یک ماهه‌، دو برابر شد‌ (تازه بماند که چقدر فروشنده پوست خربزه زیر بقلمان گذاشت که ضرر می‌کند). این شد که تصمیم گرفتیم سروری با منابع کمتر ابتیاع کنیم و خوب به خاطر این که نمی‌خواستیم به سرور بخت برگشته‌مان آن‌قدر فشار بیاوریم که زرتش در برود‌، تصمیم گرفتیم که بی‌خیال وب سرور شویم‌ (و البته کلی جینگولک دیگر)!
خوب این بی‌خیال شدن یعنی دیگر نمی‌توانستیم در نهایت گشادی فایل‌هایی که خیر‌خواهانه از سمت کشور‌هایی کاملا دموکراتیک و آزاد از دسترسمان خارج شده بود -تا مبادا خدای نکرده‌، بزنیم کسی را با آن اوخ کنیم- را دانلود کنیم روی سرور و بعد با وب سرور بخورانیم به دانلود منیجر همه فن حریفمان‌، همچین هم نمی‌شد اسم سرورمان را گذاشت چاقوس سوییسی D:&lt;/p&gt;
&lt;p&gt;این شد که تصمیم گرفتم که راهی غیر از وب سرور برای انتقال فایل از سرور (که می‌توان دقیقا یک کامپیوتر با یک اتصال اینترنت به درد بخور فرضش کرد) به کامپیوتر خودمان پیدا کنم‌. در این مسیر همراهم باشید و عمرا قصه نخورید که چرا در سیستم عامل استکباریتان‌، خواب چنین وسایلی را به راحتی نمی‌بینیند:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h5&gt;Konqueror:&lt;/h5&gt;
&lt;p&gt;خوب اولین ابزار دم دستمان مرورگر پیش‌فرض KDE است‌. برای دیدن فایل‌های روی وب‌سرور تنها کافیست در آدرس‌بار چنین چیزی بنویسیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;fish://USER@IPSERVER
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خودش پس از شروع به جستجو پسوورد می‌پرسد که همان پسوورد ssh (پسوورد یوزر) خواهد بود‌. و دیگر می‌توانید با فایل‌ها جوری رفتار کنید که انگار روی کامپیوتر خودتان قرار دارند‌. ولی خوب بدیهی است که با سرعت اینترنت بالای ما‌، خیلی دردناک است‌. برای فایل‌های کوچک حداکثر تا دو سه مگابایتی می‌توان با یک کپی پیست ساده سر و ته قضیه را هم آورد‌. ولی اگر فایل دو گیگ باشد‌، باید دنبال چارهٔ بهتر گشت‌.&lt;/p&gt;
&lt;h5&gt;scp&lt;/h5&gt;

&lt;p&gt;یا همان Safe CoPy‌، که به این صورت مورد استعمال قرار می‌گیرد:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;scp USER@IPSERVER:PATH_TO_FILE _Path_to_download_
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;بعد از اجرا یک پرامپتی می‌آید و پسوورد می‌پرسد (عین ssh خودمان) و عملیات کپی انجام می‌شود‌. بدبختی‌اش این‌جاست که چون ما خیلی به سرعت انتقالمان اطمینان داریم‌، یک بار زبانم لال، فایلمان ناقص دانلود شود‌ (لنگر است دیگر‌، می‌افتد‌)، دیگر نمی‌توان Resume‌اش کرد و باید دوباره از اول شروع کنید‌.&lt;/p&gt;
&lt;p&gt;scp خوب است‌، ولی باز هم زیاد به درد موقعیت ما نمی‌خورد‌. می‌رویم گزینهٔ بعدی.&lt;/p&gt;
&lt;h5&gt;Filezilla&lt;/h5&gt;

&lt;p&gt;این فایلزیلای پدر سوخته را احتمالا از روی استفاده‌هایش برای FTP می‌شناسید‌. خوب خوشبختانه این‌ها از پروتکلی به اسم SFTP هم پشتیبانی می‌کنند که منظورش این است که SSH می‌تواند برای وصل شدن به سرور مقصد قرار گیرد‌. پس کافیست از منوی فایل روی Site manager کلیک کنید و صفحهٔ باز شده را مثل عکس زیر کانفیگ کنید:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://dl.dropbox.com/u/25017694/Blog-photos/filezilla.png"&gt;&lt;img class="aligncenter" title="Filezilla site manager" src="http://dl.dropbox.com/u/25017694/Blog-photos/filezilla.png" alt="Filezilla site manager" width="419" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;و بعد هم روی connect بزنید و تمام‌. خیلی راحت وصل می‌شوید و می‌توانید با Drog &amp;amp; Drop فایل را انتقال دهید به سیستم‌تان‌. آسان بود‌. ولی خوب ما فقیر فقرا که ساعت ۲ تا ۷ صبح سرعت اینترنت‌مان سر به فلک می‌کشد‌، با تک نخی بودن مدل دانلود‌مان احتمالا طی پنج ساعت نمی‌توانیم ۲ درصد یک فایل دو گیگی را دانلود کنیم‌. می‌توانیم؟&lt;/p&gt;
&lt;p&gt;پس فایلزیلا هم با تمام خوبی‌هایش بهتر است برود جلو بوق بزند‌. ما باید برای مساله‌مان دنبال یک راه حل بهتر باشیم‌.&lt;/p&gt;
&lt;h5&gt;rsync&lt;/h5&gt;

&lt;p&gt;یاد‌تان می‌آید گفتیم که scp سرعت خوبی داشت ولی Resume نمی‌کرد‌. یک ابزار دیگر هم داریم که جینگولک بازی‌هایش در زمان Resume فوق‌العاده است و زبان زد خاص و عام‌. مثل این نقل قول:&lt;/p&gt;
&lt;blockquote&gt;ای کسانی که ویندوز آورده‌اید‌، اگر راست می‌گویید rsync بیاورید «&lt;del&gt;منبع نامعلوم&lt;/del&gt;&lt;a href="http://shahinism.com/blog/1391/07/26/%d8%b3%db%8c%d8%b1-%d8%b5%d8%b9%d9%88%d8%af%db%8c-%d9%88-%d8%b1%d9%88%d8%b4%e2%80%8c%d9%87%d8%a7%db%8c-%d9%85%d8%ae%d8%aa%d9%84%d9%81%db%8c-%da%a9%d9%87-%d8%a8%d8%b1%d8%a7%db%8c-%d8%af%d8%a7%d9%86/#comment-537"&gt; منبع خودش اومد اعتراف کرد ;-)&lt;/a&gt;»&lt;/blockquote&gt;

&lt;p&gt;این می‌شود که از آن به صورت زیر استفاده می‌کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;rsync -az --progress --rsh&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ssh'&lt;/span&gt; --partial USER@IPSERVER:PATH_TO_FILE _Path_to_download
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خیلی هم خوب‌. یکی از ویژگی‌هایش این است که می‌توانید آدرس یک پوشه را برای دانلود بهش بخورانید و دیگر دست به دستور نزنید و فقط هر وقت خواستید رانش کنید‌. خودش آخرین فایل‌های آن پوشه را می‌گیرد‌. اما امان از سرعت‌. این جینگولک بازی‌های rsync روی قابلیت‌های فوق‌العاده resume‌اش هزینه دارد و آن هم سرعت است‌! که ما به آن هم خیلی نیاز داریم‌. برای این کار بسته به موقعیت می‌توانیم آن آرگومان z را حذف کنیم‌. ولی حقیقتش برای ما فرق چندانی نداشت‌.&lt;/p&gt;
&lt;p&gt;این است که rsync هم می‌گذاریم برای وقتی که لازمش داریم و می‌رویم دنبال یک راه حل بهتر که هم Resume کند‌، هم چند نخه دانلود کند‌، و از آن مهم‌تر این که هی مجبورمان نکند پسوورد بزنیم! آخر چه کسی حالش را دارد ساعت ۲ صبح پسوورد یادش بیاورد؟&lt;/p&gt;
&lt;h5&gt;lftp&lt;/h5&gt;

&lt;p&gt;فوق‌العاده‌ است‌. فوق‌العاده‌. و این‌طوری استفاده می‌شود:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;lftp -c &lt;span class="s2"&gt;"mirror -c --use-pget-n=10 --verbose sftp://USER:PASSWORD@IPSERVER/PATH_TO_FILE"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;هوم‌، یک کمی طولانی شد‌. ولی بگذارید کمی در موردش صحبت کنیم‌. چون واقعا لازم به توضیح است:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;‎-c اول یعنی این که دستور روبرو را اجرا کن‌.&lt;/li&gt;
    &lt;li&gt;mirror یک برنامه توکار برای lftp است‌. یکی دیگر مثلا pget است‌. هر کدام به درد جایی می‌خورد و این mirror الان به درد ما‌. (از pget هم می‌توان استفاده کرد ولی این یکی بیشتر به مزاقم نشست).&lt;/li&gt;
    &lt;li&gt;‎-c این آرگومان مال mirror است و یعنی Resume کن اگر می‌توانی D:&lt;/li&gt;
    &lt;li&gt;‎--user-pget-n=10 یعنی فایل را ده قسمت کن و همه را با هم بگیر‌. این همان قابلیت چند نخی است که باعث افزایش سرعت می‌شود و دانلود منیجر‌های مدرن با آن پز می‌دهند ;-)&lt;/li&gt;
    &lt;li&gt;USER:PASSWORD یعنی این‌ور یوزر را می‌نویسیم و آن‌ورش رمز عبورش را!&lt;/li&gt;
    &lt;li&gt;PATH_TO_FILE این‌بار کمی با باقی مواقع فرق دارد‌. قبلا آدرس را از پوشهٔ خانگی یوزری که وارد شده بود وارد می‌کردیم و موضوع حل بود‌. ولی اینجا آدرس را از ریشه (/) می‌نویسیم‌. یعنی اگر در پوشهٔ خانگی‌تان است می‌شود این:&lt;/li&gt;
&lt;/ul&gt;&lt;div class="code"&gt;&lt;pre&gt;/home/USER/File
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;lftp هم مانند rsync (شاید هم scp) زورش را دارد که پوشه‌ای که به آن خورانده‌ایم را دانلود کند‌.&lt;/p&gt;
&lt;p&gt;همین دیگر‌. دیدید؟ باز هم بگویید بد است‌. لامصب را می‌بینید که چقدر به فکر جیب آدم است؟ با هر پولی و با هر سازی که دلتان خواست برایش بنوازید‌، برای‌تان آن‌قدر خوب رقص می‌کند که انگشت به دهن می‌بانید ;-)&lt;/p&gt;</description><category>filezilla</category><category>KDE</category><category>konqueror</category><category>lftp</category><category>rsync</category><category>scp</category><category>ssh</category><category>اینترنت</category><category>حل مشکل</category><category>سرور</category><category>نرم افزار</category><category>کدباز</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910726syr-swdy-w-rwshhy-mkhtlfy-khh-bry-dn.html</guid><pubDate>Wed, 17 Oct 2012 17:27:43 GMT</pubDate></item><item><title>چطور نمای oxygen را برای GTK و Qt در هر مدیر‌پنجره‌ای داشته باشیم‌؟</title><link>http://shahinism.github.io/posts/blog13910620chtwr-nmy-oxygen-r-bry-gtk-w-qt-dr-hr-mdyrpnjrh.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;تا زمانی که روی KDE بودم زیاد به قیافهٔ پنجره‌های GTKایم (مثل فایرفاکس یا Pidgin) اهمیت نمی‌دادم‌. خود میزکار آن‌قدر چشم نواز بود که این‌ها اصلا به چشم نمی‌آمد (البته می‌دانم مشکل با Gtk-qt-engine حل می‌شد‌، ولی باگ‌هایش در نرم‌افزاری مثل Libreoffice درد آور بود!) وقتی هم که کلا میزکارم را به &lt;a title="نصب Awesome WM روی اسلکور" href="http://shahinism.com/blog/1391/01/06/%d9%86%d8%b5%d8%a8-awesome-wm-%d8%b1%d9%88%db%8c-%d8%a7%d8%b3%d9%84%da%a9%d9%88%d8%b1/" target="_blank"&gt;Awesome&lt;/a&gt; یا این اواخر &lt;a title="تجربهٔ کار با i3 یک رقیب قدر‌!" href="http://shahinism.com/blog/1391/04/15/%d8%aa%d8%ac%d8%b1%d8%a8%d9%87%d9%94-%da%a9%d8%a7%d8%b1-%d8%a8%d8%a7-i3-%db%8c%da%a9-%d8%b1%d8%ba%db%8c%d8%a8-%d9%82%d8%af%d8%b1%e2%80%8c/" target="_blank"&gt;i3&lt;/a&gt; تغییر دادم‌، آن‌قدر‌ها در گیر و دار پوستهٔ GTK نبودم‌. چون چشمم به قدر کافی به آن‌ها عادت کرده بود‌.
چشم پوشی از حل این مساله هم‌چنان ادامه داشت تا این که بعد از آپگرید به نسخهٔ کارنت اسلکور (که اگر امتحانش نکنید‌، چیز‌های خیلی خیلی خوبی را از دست داده‌اید‌) نکته کمی عجیب‌تر شد‌! تمامی پنجره‌ها (اعم از GTK و Qt) در KDE با نمای Qt نمایش داده می‌شدند (آره هنوز KDE نصب می‌کنم‌، چون کس دیگه هم از کامپیوترم استفاده می‌کنه ;-)) ولی در i3 حتی پنجره‌های Qt هم به مزخرفی قبل بودند‌. دیگر وقت آن شد که مساله را حل کنیم‌!&lt;/p&gt;
&lt;p&gt;&lt;a title="Uniform_Look_for_Qt_and_GTK_Applications" href="https://wiki.archlinux.org/index.php/Uniform_Look_for_Qt_and_GTK_Applications#Styles_for_both_Qt_and_GTK.2B" target="_blank"&gt;این مدخل&lt;/a&gt; ویکی آرچ‌، منبع خیلی کاملی برای این مساله است‌! اما خلاصه‌اش را به همراه چند نکتهٔ ظریف می‌توانید در ادامه بخوانید‌:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h5&gt;Oxygen برای GTK:&lt;/h5&gt;
&lt;p&gt;از آن‌جایی که&lt;a title="gtk2 styles" href="https://wiki.archlinux.org/index.php/Uniform_Look_for_Qt_and_GTK_Applications#GTK2_styles" target="_blank"&gt; ابزار‌های زیادی &lt;/a&gt;برای این کار وجود دارد‌ (حتی می‌توان این کار را&lt;a title="manual gtk2 style" href="https://wiki.archlinux.org/index.php/GTK%2B#GTK.2B_2.x" target="_blank"&gt; به صورت دستی&lt;/a&gt; انجام داد) کافیست یکی از آن‌ها را نصب و اجرا کرده و تم oxygen را انتخاب کنید ;-) مثلا در اسلکور من از &lt;a title="gtk-chtheme official page" href="http://plasmasturm.org/code/gtk-chtheme/" target="_blank"&gt;gtk-chtheme&lt;/a&gt; استفاده کردم که اسلکبیلدش هم موجوده D:&lt;/p&gt;
&lt;h5&gt;oxygen در Qt:&lt;/h5&gt;

&lt;p&gt;حقیقتش خیلی وقت بود که بعضی چیز‌ها در نمای Qt اذیتم می‌کرد‌. مثلا فونت ریز این بالون‌هایی که در Systemtry برای اخطار ظاهر می‌شوند (برای دیدن ترجمهٔ لغاتم در mdic زیاد با آن‌ها روبرو می‌شوم) با این چشم ضعیف و رزولوشن کم مانیتور‌، جدا خسته کننده می‌شد‌! این بود که دیروز خیلی اتفاقی دستور زیر را پیدا کردم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;qtconfig
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;(و اصلا همین دستور زمینهٔ حل کل مشکلات مطرح شده در این پست را فراهم کرد!) خوب محتویات دستور که تماما مهیاست‌. اما احتمال دارد مثل من‌، Oxygen جزء تم‌های qtconfig‌تان نباشد‌. و دقیقا این همان دلیلی است که جدیدا در اسلکور نمای Qt ناجور شده بود‌. برای حل این مشکل کافیست آدرس پوشهٔ Plugin بستهٔ KDE را به متغیر QT_PLUGIN_PATH (سراسری) نسبت دهیم‌! یعنی در نسخهٔ ۶۴ بیتی اسلکور باید همچین خطی را به فایل ‎/etc/profile اضافه کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;QT_PLUGIN_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib64/kde4/plugins/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;احتمالا بعد از یک لاگوت/لاگین‌، این مشکل هم حل شده ;-)&lt;/p&gt;</description><category>GTK</category><category>gtk-chtheme</category><category>i3</category><category>KDE</category><category>Qt</category><category>qt-config</category><category>اسلکور</category><category>حل مشکل</category><category>چی‌؟ چرا‌؟ چگونه‌؟</category><guid>http://shahinism.github.io/posts/blog13910620chtwr-nmy-oxygen-r-bry-gtk-w-qt-dr-hr-mdyrpnjrh.html</guid><pubDate>Mon, 10 Sep 2012 08:04:36 GMT</pubDate></item><item><title>یادداشتی در مورد درمان آلزایمر Alsa‌!</title><link>http://shahinism.github.io/posts/blog13910121yddshty-dr-mwrd-drmn-alzymr-alsa.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;قبلا‌ها که در KDE و خیل عظیم ابزار‌هایش در حال غرق شدن بودم‌، اصلا در مخیله‌ام هم نمی‌گنجید که چطور این تنظیمات صدا ذخیره می‌شوند‌، و توسط کار‌بر‌ها قابل بازیابی است‌. بعد‌ها هم که آمدم Awesome و یک قدم نزدیک‌تر شدم به سیستم و احساس نیاز کردم به دانستن همچین چیزی‌، با دستور alsamixer کانال‌های صدایم را تنظیم می‌کردم و با زدن alsactl با کاربر ریشه‌، به قول خودم تنظیمات را قابل بازیابی می‌کردم (‌*هنوز هم نمی‌دانم چرا قبلا می‌شد و یا چرا الان نمی‌شود‌! ;-))
خوب دیگر‌، خط بالا دردم را گفتم‌، و خوشبختانه ویکی آرچ طبق معمول به دادم رسید و دو دستور پایین شد چاره‌ی کارم !&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;alsactl -f /var/lib/alsa/asount.state store

alsactl -f /var/lib/alsa/asount.state restore
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خوب حالا یعنی چه؟ اولی را که اجرا کنی یک فایل حاوی تنظیمات فعلی Alsa‌تان در شاخه‌ی مذکور می‌سازد که طبعا در ادامه توسط خود alsactl قابل خواندن است‌. در خط بعد هم به alsactl می‌گوییم که آن فایل که ساختی را بخوان‌! خوب ما هم که تنبل‌تر از این حرف‌هاییم خط دوم را به فایل rc.local (‌برای اسلکور موجود در شاخه ‏‎/etc/rc.d و برای آرچ در همان etc) کپی می‌کنیم تا دیگر خودش بداند و خودش.&lt;/p&gt;
&lt;p&gt;*: ممنون می‌شوم اگر می‌دانید چطور شد که اینطور شد‌، به ما هم یاد دهید ;-)&lt;/p&gt;</description><category>Alsa</category><category>alsactl</category><category>alsamixer</category><category>awesome wm</category><category>KDE</category><category>اسلکور</category><category>حل مشکل</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910121yddshty-dr-mwrd-drmn-alzymr-alsa.html</guid><pubDate>Mon, 09 Apr 2012 15:51:31 GMT</pubDate></item><item><title>نبض سیستم‌تان در دستان شما</title><link>http://shahinism.github.io/posts/blog13900531nbd-systmtn-dr-dstn-shm.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;زیاد اهل خوشگل کردن دسکتاپم نیستم‌. حقیقتش این است که تصویر پس‌زمینه را هم ممکن است‌‌ همان که پیش‌فرض است بگذارم و تغییر ندهم‌. - نمی‌دانم‌، شاید این عادت از‌‌ همان سیستم قدیمی و ویندوز XP برایم باقی مانده‌، که برای لود بک‌گراند غیر پیش‌فرض جانش بالا می‌آمد‌. -.&lt;/p&gt;
&lt;p&gt;پس از ارتقا KDE به نسخهٔ ۴،۷ و پیدا کردن &lt;a title="Wallpaper Wide" href="http://wallpaperswide.com/" target="_blank"&gt;این سایت&lt;/a&gt; که پس‌زمینه‌های فوق‌العاده‌ای در خود جای داده‌ (‌تشکر دوباره از &lt;a title="BardiaX on wordpress" href="http://bardiax.wordpress.com/" target="_blank"&gt;بردیا&lt;/a&gt; که در گوپس معرفی‌اش کرد‌)، خواستم یکی از معدود پلاسموید‌هایی را که استفاده می‌کنم را دوباره نصب کنم‌. نتیجه به حدی برایم دلنشین شد که آن را اینجا به اشتراک می‌گذارم‌.&lt;/p&gt;
&lt;p&gt;Yasp-Scripted را می‌توانید از &lt;a title="Yasp-Scripted (Systemmonitor) v1.0.8a    " href="http://kde-look.org/content/show.php?content=109367" target="_blank"&gt;اینجا&lt;/a&gt; دانلود و نصب کنید (‌کار زیاد سختی نیست‌، باید از سورس اقدام کنید‌ که در فایل INSTALL طبق معمول همه توضیحات داده شده). ولی بسته به سیستمتان بعد از افزودن پلاسموید به میزکار ممکن است نتیجه‌ای نگیرید (که من هم نگرفتم‌!). موضوع سر فایل. yasp.script که در پوشهٔ خانگیتان می‌توانید پیدایش کنید‌. این فایل کد‌های مربوط به نحوه و امکانات نمایش پلاسموید را در اختیار دارد که ممکن است با سیستم شما همخوان نباشد‌. خوشبختانه تعدادی دیگر از نمونه‌های این فایل را می‌توانید در شاخه yasp_scripts موجود در سورس کد بیابید‌. گزینه‌های مختلف را امتحان کنید‌، احتمالا به نتیجه می‌رسید‌. بعد هم می‌توانید با توجه به سلیقه و امکانات سخت‌افزاریتان‌، فایلی که برایتان اثربخش بوده را شخصی سازی کنید‌.&lt;/p&gt;
&lt;p&gt;من نمونه‌ای از این فایل را که برای خودم آماده کردم دز &lt;a title="نمونه اسکریپت شخصی سازی شده شاهینیسم" href="http://shahinism.com/wp-content/uploads/SH-Script.tar.gz"&gt;این‌جا&lt;/a&gt; قرار داده‌ام که می‌توانید دریافت کنید‌. این فایل را برای CPU چهار‌هسته‌ای آماده کرده‌ام و بخش‌های مربوط به سنسور حرارتش را حذف کرده‌ام (‌هر چه تلاش کردم نتوانستم به کارش بیاندازم‌) ‌. ترتیب رنگ‌ها هم تنها ترتیب رنگی است که اصولا یادم نمی‌رود (‌رنگین کمان‌) ‌. در کل چیز جالبی در می‌آید اگر روی یک بک‌گراند روشن پیاده شود‌. نمونه می‌ز‌کار من را در زیر مشاهده می‌کنید‌.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://shahinism.com/wp-content/uploads/Sh-Kde.png" rel="prettyPhoto"&gt;&lt;img class="aligncenter size-medium wp-image-426" style="margin: 7px auto;" title="Sh-Kde" src="http://shahinism.com/wp-content/uploads/Sh-Kde-300x225.png" alt="" width="330" height="247"&gt;&lt;/a&gt;&lt;/p&gt;</description><category>KDE</category><category>Plosmoid</category><category>اسلکور</category><category>بررسی</category><category>نرم افزار</category><category>کدباز</category><guid>http://shahinism.github.io/posts/blog13900531nbd-systmtn-dr-dstn-shm.html</guid><pubDate>Mon, 22 Aug 2011 16:33:26 GMT</pubDate></item></channel></rss>