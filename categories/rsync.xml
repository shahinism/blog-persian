<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>شاهینیسم (rsync)</title><link>http://shahinism.github.io</link><description>بعضی وقت‌ها باید قبل از این که بتوانید راه بروید‌، بدوید‌!</description><lastBuildDate>Thu, 29 Aug 2013 16:33:57 GMT</lastBuildDate><generator>nikola</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>پشتیبان‌گیری با rsync, cron, dropbox</title><link>http://shahinism.github.io/posts/backup_with_dropbox.html</link><description>&lt;p&gt;خوب قربانش بروم‌، با &lt;a class="reference external" href="http://shahinism.github.io/posts/blog13910825wqty-dzdy-mykhnmnyd.html"&gt;اعجوبه‌ای&lt;/a&gt; که به نام اینترنت به ما می‌فروشند‌، زیاد سعادت آن را نداریم که از Cloud و امکاناتش در هر زمینه که لازم بود بهره ببریم. این است که عمدتا بیخودی مجبوریم به خودمان استرس وارد کنیم. مساله این‌جاست که تا همین چند وقت پیش من از سرویس‌های تحت وب برای مدیریت برخی از اطلاعات مهم‌ام استفاده می‌کردم. اما الان دیگر بنا به دلایلی به آن‌ها بی‌اعتماد شده‌ام. این است که این فایل‌ها و ابزار‌های مورد نیازم را روی سیستم خودم دارم و حالا با روش‌هایی که طی پست‌های بعد می‌گویم‌، به روز و نگهداری‌شان می‌کنم.&lt;/p&gt;
&lt;p&gt;ولی نکته این‌جاست که با این کار مهم‌ترین مزیت سیستم‌های تحت وب را از دست داده‌ام. چطور؟ اول این که قابلیت انتقال این فایل‌های مهم را از دست داده‌ام و ثانیا این که نمی‌توانم ازشان یک backup درست درمان داشته باشم! نمی‌توانم؟ خوب دروغ گفتم‌، قرار است در نگاه اول این‌طور به نظر برسد! با چند ابزار ساده و به درد بخور لینوکسی، کمی هم چاشنی &lt;a class="reference external" href="http://dropbox.com"&gt;Dropbox&lt;/a&gt; ‌، هم می‌شود قابلیت انتقال را داشت و هم backup!&lt;/p&gt;
&lt;div class="section" id="dropbox"&gt;
&lt;h2&gt;Dropbox را نصب کنید&lt;/h2&gt;
&lt;p&gt;خوشبختانه &lt;a class="reference external" href="http://dropbox.com"&gt;dropbox&lt;/a&gt; یک نرم‌افزار متن‌باز GPL‌ایه خوب برای لینوکس دارد که قابلیت Sync کردن فایل‌ها با اکانت dropbox‌مان را بهمان می‌دهد. آن را متناسب با توزیع‌تان پیدا و نصب کنید. مثلا من از این &lt;a class="reference external" href="http://slackbuilds.org/repository/14.0/network/dropbox/"&gt;SlackBuild&lt;/a&gt; استفاده کردم.&lt;/p&gt;
&lt;p&gt;بعد از نصب احتمالا اگر خودتان دستکاری‌اش نکرده باشید &lt;strong&gt;‎~/Dropbox&lt;/strong&gt; پوشه‌ای است که قرار است با اکانت‌تان Sync شود. من آن را در مسیر دیگری قرار دادم. شما هم می‌توانید بسته به نیاز‌تان مسیر بهتری را انتخاب کنید. هر چه باشد فایل‌های مهمی تویش است‌، خوبیت ندارد همین‌طوری توی چشم باشد که ;-)&lt;/p&gt;
&lt;p&gt;برای اجرای خودکار این برنامه در هنگام ورود به سیستم کافیست دستور &lt;strong&gt;dropboxd&lt;/strong&gt; را در هنگام ورود به محیط‌کار‌تان اجرا کنید. یعنی یا آن را به فایل &lt;strong&gt;‎~/.xinitrc&lt;/strong&gt; تان اضافه کنید. یا مثل من بگذارید توی تنظیمات i3 که اجرا شود. روش‌های دیگری هم هست‌، ولی همین یکی فکر کنم کفایت کند‌!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="backup"&gt;
&lt;h2&gt;اسکریپت backup&lt;/h2&gt;
&lt;p&gt;حالا که تنها کافیست فایل‌های مهم‌مان را درون یک پوشه بریزیم تا خود به خود روی &lt;a class="reference external" href="http://dropbox.com"&gt;Dropbox&lt;/a&gt; کپی شود‌، یک اسکریپت می‌خواهیم که این کار را به نحو مناسبی برای‌مان انجام دهد. عملا کپی (cp) کردن فایل جواب مساله‌مان نیست. چطور؟ خوب ممکن است بخواهیم فایل‌مان را تغییر دهیم یا چه می‌دانم‌، فایل خاصی به دایرکتوری اضافه کنیم. این است که دوست قدیمی‌مان rsync را صدا می‌زنیم. اسکریپت من یک هم‌چین چیزی از آب در آمد:&lt;/p&gt;
&lt;pre class="code bash literal-block"&gt;
rsync -a -v ~/.pwsafe* ~/Workspace/Dropbox/safe
rsync -r -v ~/Workspace/org ~/Workspace/Dropbox
&lt;/pre&gt;
&lt;p&gt;سر راست است این‌طور نیست؟ فعلا شروع کار است‌، احتمالا در آینده عملش طولانی‌تر هم می‌شود‌، ولی احتمالا باز هم به همین سادگی‌ست. حالا کافیست هر بار آن را اجرا کنم تا فایل‌ها خیلی تمیز کپی شوند داخل پوشهٔ &lt;a class="reference external" href="http://dropbox.com"&gt;dropbox&lt;/a&gt; ام و برنامهٔ dropbox آن را برایم بفرستد روی Cloud!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h2&gt;اجرای خود‌کار اسکریپت&lt;/h2&gt;
&lt;p&gt;الان هم اسکریپت‌مان خوب کار می‌کند و هم پوشهٔ &lt;a class="reference external" href="http://dropbox.com"&gt;dropbox&lt;/a&gt; فایل‌ها را خیلی راحت روی Cloud می‌فرستد. ولی هنوز یک ضعف وجود دارد. این که هر بار باید خودم یادم باشد که اسکریپت را اجرا کنم. خوب با این حافظهٔ من‌، می‌دانم که کل این پروسهٔ backup‌گیری با شکست مواجه می‌شود. اولین انتخابم این است که مثلا کاری کنم که موقع خاموش‌کردن سیستم این اسکریپت اجرا شود که چندان عقلانی به نظر نمی‌رسد! به هر حال اینترنت ماست دیگر‌! همیشه که سر حال نیست.&lt;/p&gt;
&lt;p&gt;این است که به سراغ آن یکی دوست قدیمی‌مان می‌رویم‌، cron! وظیفهٔ این دوست‌مان این است که یک دستوری را بگیرد و به طبق زمان‌بندی خاصی اجرایش کند. اگر درست نمی‌شناسیدش کافیست یک سری به manpage‌اش بزنید و یا &lt;a class="reference external" href="http://www.cyberciti.biz/faq/how-do-i-add-jobs-to-cron-under-linux-or-unix-oses/"&gt;این پست cyberciti&lt;/a&gt; را بخوانید.&lt;/p&gt;
&lt;p&gt;برای اضافه‌کردن یک job جدید‌، کافیست دستور &lt;strong&gt;crontab -e&lt;/strong&gt; را وارد کنیم. خودش فایل را باز می‌کند و نوبت ویرایش شما می‌رسد. اما قبل از آن بهتر است که تعیین کنید که کدام ویرایش‌گر برای این کار استفاده شود. خودش به صورت پیش‌فرض از vi استفاده می‌کند که من دوستش ندارم. این است که با گذاشتن &lt;strong&gt;export EDITOR=vim&lt;/strong&gt; داخل ‎~/.zshrc‌ام بهش می‌گویم که از vim استفاده کند که بسیار قابل تحمل‌تر است.&lt;/p&gt;
&lt;p&gt;حالا خط زیر را به عنوان job اضافه می‌کنم.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;
@hourly ID=backup-hourly /home/shahin/Workspace/bin/dropbackup.sh &amp;gt; /home/shahin/.cronstatus
&lt;/pre&gt;
&lt;p&gt;یعنی هر ساعت (‎@hourly) دستور dropbackup.sh را اجرا کن و خروجی‌اش را جای ایمیل کردن برایم (ایمیل داخل خود سیستم منظورم است) آن را درون فایل ‎.cronstatus ذخیره کن. به همین راحتی ;-)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ویرایش اول&lt;/strong&gt;: تگ ID حتما باید در دستور وجود داشته باشد‌، در غیر این صورت دستور به درستی عمل نمی‌کند.&lt;/p&gt;
&lt;/div&gt;</description><category>dropbox</category><category>crontab</category><category>cron</category><category>rsync</category><category>backup</category><guid>http://shahinism.github.io/posts/backup_with_dropbox.html</guid><pubDate>Tue, 28 May 2013 10:25:59 GMT</pubDate></item><item><title>سیر صعودی $ و روش‌های مختلفی که برای دانلود در لینوکس یاد گرفتم!</title><link>http://shahinism.github.io/posts/blog13910726syr-swdy-w-rwshhy-mkhtlfy-khh-bry-dn.html</link><description>&lt;p&gt;&lt;/p&gt;&lt;p&gt;از آب گل آلود ماهی گرفتن به این می‌گویند D:. به حول قوهٔ الهی و بعد از اول شدنمان در دنیا‌، سروری که از فرت آزادی بیان و عقیده از آن به عنوان چاقوی سوئیسی استفاده می‌کردیم‌، قیمتش ظرف یک دورهٔ یک ماهه‌، دو برابر شد‌ (تازه بماند که چقدر فروشنده پوست خربزه زیر بقلمان گذاشت که ضرر می‌کند). این شد که تصمیم گرفتیم سروری با منابع کمتر ابتیاع کنیم و خوب به خاطر این که نمی‌خواستیم به سرور بخت برگشته‌مان آن‌قدر فشار بیاوریم که زرتش در برود‌، تصمیم گرفتیم که بی‌خیال وب سرور شویم‌ (و البته کلی جینگولک دیگر)!
خوب این بی‌خیال شدن یعنی دیگر نمی‌توانستیم در نهایت گشادی فایل‌هایی که خیر‌خواهانه از سمت کشور‌هایی کاملا دموکراتیک و آزاد از دسترسمان خارج شده بود -تا مبادا خدای نکرده‌، بزنیم کسی را با آن اوخ کنیم- را دانلود کنیم روی سرور و بعد با وب سرور بخورانیم به دانلود منیجر همه فن حریفمان‌، همچین هم نمی‌شد اسم سرورمان را گذاشت چاقوس سوییسی D:&lt;/p&gt;
&lt;p&gt;این شد که تصمیم گرفتم که راهی غیر از وب سرور برای انتقال فایل از سرور (که می‌توان دقیقا یک کامپیوتر با یک اتصال اینترنت به درد بخور فرضش کرد) به کامپیوتر خودمان پیدا کنم‌. در این مسیر همراهم باشید و عمرا قصه نخورید که چرا در سیستم عامل استکباریتان‌، خواب چنین وسایلی را به راحتی نمی‌بینیند:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;h5&gt;Konqueror:&lt;/h5&gt;
&lt;p&gt;خوب اولین ابزار دم دستمان مرورگر پیش‌فرض KDE است‌. برای دیدن فایل‌های روی وب‌سرور تنها کافیست در آدرس‌بار چنین چیزی بنویسیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;fish://USER@IPSERVER
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خودش پس از شروع به جستجو پسوورد می‌پرسد که همان پسوورد ssh (پسوورد یوزر) خواهد بود‌. و دیگر می‌توانید با فایل‌ها جوری رفتار کنید که انگار روی کامپیوتر خودتان قرار دارند‌. ولی خوب بدیهی است که با سرعت اینترنت بالای ما‌، خیلی دردناک است‌. برای فایل‌های کوچک حداکثر تا دو سه مگابایتی می‌توان با یک کپی پیست ساده سر و ته قضیه را هم آورد‌. ولی اگر فایل دو گیگ باشد‌، باید دنبال چارهٔ بهتر گشت‌.&lt;/p&gt;
&lt;h5&gt;scp&lt;/h5&gt;

&lt;p&gt;یا همان Safe CoPy‌، که به این صورت مورد استعمال قرار می‌گیرد:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;scp USER@IPSERVER:PATH_TO_FILE _Path_to_download_
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;بعد از اجرا یک پرامپتی می‌آید و پسوورد می‌پرسد (عین ssh خودمان) و عملیات کپی انجام می‌شود‌. بدبختی‌اش این‌جاست که چون ما خیلی به سرعت انتقالمان اطمینان داریم‌، یک بار زبانم لال، فایلمان ناقص دانلود شود‌ (لنگر است دیگر‌، می‌افتد‌)، دیگر نمی‌توان Resume‌اش کرد و باید دوباره از اول شروع کنید‌.&lt;/p&gt;
&lt;p&gt;scp خوب است‌، ولی باز هم زیاد به درد موقعیت ما نمی‌خورد‌. می‌رویم گزینهٔ بعدی.&lt;/p&gt;
&lt;h5&gt;Filezilla&lt;/h5&gt;

&lt;p&gt;این فایلزیلای پدر سوخته را احتمالا از روی استفاده‌هایش برای FTP می‌شناسید‌. خوب خوشبختانه این‌ها از پروتکلی به اسم SFTP هم پشتیبانی می‌کنند که منظورش این است که SSH می‌تواند برای وصل شدن به سرور مقصد قرار گیرد‌. پس کافیست از منوی فایل روی Site manager کلیک کنید و صفحهٔ باز شده را مثل عکس زیر کانفیگ کنید:&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://dl.dropbox.com/u/25017694/Blog-photos/filezilla.png"&gt;&lt;img class="aligncenter" title="Filezilla site manager" src="http://dl.dropbox.com/u/25017694/Blog-photos/filezilla.png" alt="Filezilla site manager" width="419" height="331"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;و بعد هم روی connect بزنید و تمام‌. خیلی راحت وصل می‌شوید و می‌توانید با Drog &amp;amp; Drop فایل را انتقال دهید به سیستم‌تان‌. آسان بود‌. ولی خوب ما فقیر فقرا که ساعت ۲ تا ۷ صبح سرعت اینترنت‌مان سر به فلک می‌کشد‌، با تک نخی بودن مدل دانلود‌مان احتمالا طی پنج ساعت نمی‌توانیم ۲ درصد یک فایل دو گیگی را دانلود کنیم‌. می‌توانیم؟&lt;/p&gt;
&lt;p&gt;پس فایلزیلا هم با تمام خوبی‌هایش بهتر است برود جلو بوق بزند‌. ما باید برای مساله‌مان دنبال یک راه حل بهتر باشیم‌.&lt;/p&gt;
&lt;h5&gt;rsync&lt;/h5&gt;

&lt;p&gt;یاد‌تان می‌آید گفتیم که scp سرعت خوبی داشت ولی Resume نمی‌کرد‌. یک ابزار دیگر هم داریم که جینگولک بازی‌هایش در زمان Resume فوق‌العاده است و زبان زد خاص و عام‌. مثل این نقل قول:&lt;/p&gt;
&lt;blockquote&gt;ای کسانی که ویندوز آورده‌اید‌، اگر راست می‌گویید rsync بیاورید «&lt;del&gt;منبع نامعلوم&lt;/del&gt;&lt;a href="http://shahinism.com/blog/1391/07/26/%d8%b3%db%8c%d8%b1-%d8%b5%d8%b9%d9%88%d8%af%db%8c-%d9%88-%d8%b1%d9%88%d8%b4%e2%80%8c%d9%87%d8%a7%db%8c-%d9%85%d8%ae%d8%aa%d9%84%d9%81%db%8c-%da%a9%d9%87-%d8%a8%d8%b1%d8%a7%db%8c-%d8%af%d8%a7%d9%86/#comment-537"&gt; منبع خودش اومد اعتراف کرد ;-)&lt;/a&gt;»&lt;/blockquote&gt;

&lt;p&gt;این می‌شود که از آن به صورت زیر استفاده می‌کنیم:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;rsync -az --progress --rsh&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'ssh'&lt;/span&gt; --partial USER@IPSERVER:PATH_TO_FILE _Path_to_download
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;خیلی هم خوب‌. یکی از ویژگی‌هایش این است که می‌توانید آدرس یک پوشه را برای دانلود بهش بخورانید و دیگر دست به دستور نزنید و فقط هر وقت خواستید رانش کنید‌. خودش آخرین فایل‌های آن پوشه را می‌گیرد‌. اما امان از سرعت‌. این جینگولک بازی‌های rsync روی قابلیت‌های فوق‌العاده resume‌اش هزینه دارد و آن هم سرعت است‌! که ما به آن هم خیلی نیاز داریم‌. برای این کار بسته به موقعیت می‌توانیم آن آرگومان z را حذف کنیم‌. ولی حقیقتش برای ما فرق چندانی نداشت‌.&lt;/p&gt;
&lt;p&gt;این است که rsync هم می‌گذاریم برای وقتی که لازمش داریم و می‌رویم دنبال یک راه حل بهتر که هم Resume کند‌، هم چند نخه دانلود کند‌، و از آن مهم‌تر این که هی مجبورمان نکند پسوورد بزنیم! آخر چه کسی حالش را دارد ساعت ۲ صبح پسوورد یادش بیاورد؟&lt;/p&gt;
&lt;h5&gt;lftp&lt;/h5&gt;

&lt;p&gt;فوق‌العاده‌ است‌. فوق‌العاده‌. و این‌طوری استفاده می‌شود:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre&gt;lftp -c &lt;span class="s2"&gt;"mirror -c --use-pget-n=10 --verbose sftp://USER:PASSWORD@IPSERVER/PATH_TO_FILE"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;هوم‌، یک کمی طولانی شد‌. ولی بگذارید کمی در موردش صحبت کنیم‌. چون واقعا لازم به توضیح است:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;‎-c اول یعنی این که دستور روبرو را اجرا کن‌.&lt;/li&gt;
    &lt;li&gt;mirror یک برنامه توکار برای lftp است‌. یکی دیگر مثلا pget است‌. هر کدام به درد جایی می‌خورد و این mirror الان به درد ما‌. (از pget هم می‌توان استفاده کرد ولی این یکی بیشتر به مزاقم نشست).&lt;/li&gt;
    &lt;li&gt;‎-c این آرگومان مال mirror است و یعنی Resume کن اگر می‌توانی D:&lt;/li&gt;
    &lt;li&gt;‎--user-pget-n=10 یعنی فایل را ده قسمت کن و همه را با هم بگیر‌. این همان قابلیت چند نخی است که باعث افزایش سرعت می‌شود و دانلود منیجر‌های مدرن با آن پز می‌دهند ;-)&lt;/li&gt;
    &lt;li&gt;USER:PASSWORD یعنی این‌ور یوزر را می‌نویسیم و آن‌ورش رمز عبورش را!&lt;/li&gt;
    &lt;li&gt;PATH_TO_FILE این‌بار کمی با باقی مواقع فرق دارد‌. قبلا آدرس را از پوشهٔ خانگی یوزری که وارد شده بود وارد می‌کردیم و موضوع حل بود‌. ولی اینجا آدرس را از ریشه (/) می‌نویسیم‌. یعنی اگر در پوشهٔ خانگی‌تان است می‌شود این:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class="code"&gt;&lt;pre&gt;/home/USER/File
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;lftp هم مانند rsync (شاید هم scp) زورش را دارد که پوشه‌ای که به آن خورانده‌ایم را دانلود کند‌.&lt;/p&gt;
&lt;p&gt;همین دیگر‌. دیدید؟ باز هم بگویید بد است‌. لامصب را می‌بینید که چقدر به فکر جیب آدم است؟ با هر پولی و با هر سازی که دلتان خواست برایش بنوازید‌، برای‌تان آن‌قدر خوب رقص می‌کند که انگشت به دهن می‌بانید ;-)&lt;/p&gt;</description><category>filezilla</category><category>KDE</category><category>konqueror</category><category>lftp</category><category>rsync</category><category>scp</category><category>ssh</category><category>اینترنت</category><category>حل مشکل</category><category>سرور</category><category>نرم افزار</category><category>کدباز</category><category>گنو/لینوکس</category><guid>http://shahinism.github.io/posts/blog13910726syr-swdy-w-rwshhy-mkhtlfy-khh-bry-dn.html</guid><pubDate>Wed, 17 Oct 2012 17:27:43 GMT</pubDate></item></channel></rss>