.. title: چطور از وابستگی به گیت‌هاب فرار کنیم: پشتیبان‌گیری از مخازن
گیت .. date: 2013/1/22 22:22:49

.. raw:: html

   <html>

.. raw:: html

   <body>

.. raw:: html

   <p>

گیت این روز‌ها تبدیل به عصای کمکی بزرگی برای انجام پروژه‌هایم شده.
خوشبختانه تا دلمان هم بخواهد سرور ارائهٔ خدمات گیت روی اینترنت ریخته که
هر کدام مزایا و محدودیت‌های خود‌شان را دارند. من‌باب مالیخولیایی زیادم
در پشتیبان‌گیری از پروژه‌ها‌، مطلب زیر (منبع) را پیدا کردم که خیلی جالب
و کمکی به نظرم آمد. تست کردم‌، فوق‌العاده بود. پس ترجمه‌اش را این‌جا
می‌گذارم تا شما هم حالی ببرید از آخرین فرزند خلف آقایمان‌، ترووالدز ;-)

.. raw:: html

   </p>

.. raw:: html

   <blockquote>

یکی از نکاتی که قطعی‌های اخیر گیت‌هاب گوشزد می‌کنند این است که گیت به
عنوان یک سیستم مدیریت نسخهٔ غیر متمرکز طراحی شده. بسیاری از مردم به این
صورت آن را مورد استفاده قرار نمی‌دهند. به جای داشتن چند بایگانی راه
دور‌، داده‌ها را به یک جا می‌فرستند و در اصل بیش از اندازه به گیت‌هاب
تکیه می‌کنند. کسانی را دیده‌ام که کل سازمان‌شان را بر پایهٔ گیت‌هاب بنا
کرده‌اند‌، چیز‌هایی نظیر گسترش اسکریپت‌های سایت‌شان و نصب اسکریپ‌ها برای
توسعه دهندگان جدید‌شان. علاوه بر این‌، dependency manager‌هایی مثل
Composer و Cocoapods نیز به گیت‌هاب وابسته‌اند تا پیش‌نیاز‌هایشان را
دریافت کنند. اگر گیت‌هاب Down شود‌، شما نمی‌توانید پیش‌نیاز‌های‌تان را
دستکاری کنید و یا نمونه‌های جدید‌تری به آن‌ها اضافه کنید. در یک دنیای
ایده‌آل این Dependency manager‌ها باید قابلیت‌ پشتیبانی توکار از
mirror‌ها را داشته باشند‌، ولی در حال حاضر من چنین قابلیت‌هایی را
نمی‌بینم.

چیزی که من می‌خواهم انجام دهم این است که نشان‌تان دهم که چقدر آسان است
که با استفاده از سرور‌های راه دور گیت در آن واحد به دو سرور مختلف
داده‌های‌تان را ارسال کنید. اگر گیت‌هاب Down شد‌، مهم نیست‌، بر فرض این
که همه افراد تیم‌تان از این راهنما پیروی کرده باشند‌، کد از طریق
bitbucket نیز در دسترس خواهد بود‌، یا هر جای دیگری که شما انتخاب
کرده‌اید. اما این راهنما از گیت‌هاب و بیت‌باکت به عنوان mirror استفاده
می‌کند.

۱. اول فرض می‌کنم که شما یک سرور راه دور برای گیت‌هاب به عنوان "origin"
ایجاد کرده‌اید. آن را به github تغییر نام دهید:

.. code:: bash


    git remote rename origin github

۲. یک مخزن جدید روی بیت‌باکت هم‌نام همان چیزی که در گیت‌هاب دارید
بسازید.

۳. این مخزن جدید را به صورت زیر به سرور‌های راه دور‌تان اضافه کنید. ولی
مطمئن باشید که اسمش bitbucket باشد و نه origin. این‌طور:

.. code:: bash


    git remote add bitbucket ssh://git@bitbucket.org/username/somerepo.git

    git push -u bitbucket --all

۴. و حالا با یک ادیتور از شاخهٔ ‎.git در مخزن گیت‌تان فایل config را باز
کنید.

۵. نوبت این است که url‌های مربوط به هر سرور راه دور را به مجموعهٔ جدیدی
به اسم origin اضافه کنیم. می‌شود چیزی شبیه این:

.. code:: bash


    [remote "origin"]

    url = git@github.com:username/somerepo.git

    url = ssh://git@bitbucket.org/username/somerepo.git

۶. دفعهٔ بعد که از دستور git push origin استفاده کردید‌، مخزن در هر دو
سرور راه دور آپلود خواهد شد.

به همین راحتی.

نسخه‌های اخیر گیت این اجازه را به شما می‌دهند که چند جا را به عنوان مخزن
راه دور یک مجموعه معرفی کنید. ولی من ترجیح می‌دهم که ببینم چه کاری انجام
می‌دهم.

.. raw:: html

   </blockquote>

نکته از شاهینیسم: بهتر است از یک public-key برای گیت‌هاب و بیت‌باکت
استفاده کنید. این‌طوری مرحلهٔ شناسایی هر دو سرور مثل هم خواهد بود ;-)

.. raw:: html

   </body>

.. raw:: html

   </html>
